{"version":3,"sources":["styles.js","components/ThemeToggler.jsx","components/TwoFace.jsx","components/Media.jsx","components/Text.jsx","components/Sketches.jsx","components/Gallery.jsx","components/Project.jsx","components/Programming.jsx","components/Design.jsx","components/Skills.jsx","benWeber.js","index.js"],"names":["GlobalStyles","createGlobalStyle","props","theme","base","baseStyles","primary","accent","weight","thin","regular","bold","dark","mode","complement","light","Toggler","styled","button","opacity","padding","used","borderRadius","outline","border","fontWeight","background","transition","display","margin","transform","ThemeToggler","onClick","toggleMode","Real","img","position","Vector","top","left","picStyles","width","height","TwoFace","id","style","src","real","document","getElementById","vector","zIndex","setTimeout","Container","div","Site","a","name","Media","href","H1","h1","marginTop","marginBottom","fontSize","color","H2","h2","marginLeft","H3","P","p","lineHeight","Span","span","Text","type","children","Sketches_","Sketch","SketchInfo","SketchPreview","window","innerWidth","sketchData","Sketches","state","previewOpen","currentSketch","sketch","this","querySelector","classList","add","setState","remove","map","i","key","showSketch","className","React","Component","Project_","preview","hide","Project","console","log","description","repo","demo","proj","gridArea","Root","BenWeber","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.4c93e550.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${props => props.theme.base};\n    transition: background .5s ease;\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n    font-family: 'Open Sans';\n    font-size: 1rem;\n    box-sizing: border-box;\n  }\n\n  p {\n    font-weight: 200;\n  }\n\n  .w5 { height: max(5vw, 5vh) }\n  .w10 { height: max(10vw, 10vh) }\n\n  @keyframes pulseLight {\n    0% { box-shadow: 0 0 0 0 rgba(255, 255, 255, .15) }\n    100% { box-shadow: 0 0 0 60px rgba(255, 255, 255, 0) }\n  }\n\n  @keyframes pulseDark {\n    0% { box-shadow: 0 0 0 0 rgba(0, 0, 0, .05) }\n    100% { box-shadow: 0 0 0 60px rgba(0, 0, 0, 0) }\n  }\n`\n\nconst baseStyles = {\n  primary: '#60b389',\n  accent: '#97cfb3',\n\n  weight: {\n    thin: '300',\n    regular: '400',\n    bold: '700' // or 600, 800\n  }\n}\n\nexport const theme = {\n  dark: {\n    mode: 'dark',\n    base: '#111111',\n    complement: '#ffffff',\n    ...baseStyles\n  },\n\n  light: {\n    mode: 'light',\n    base: '#ffffff',\n    complement: '#111111',\n    ...baseStyles\n  }\n}","import React from 'react'\nimport styled from 'styled-components'\n\n// needed to use the 'props =>' format is so I had access to the used variable\nconst Toggler = styled.button(props => ({\n  opacity: .3,\n  padding: props.used ? '.5rem .5rem' : '.5rem 2rem',\n  borderRadius: '100px',\n  outline: 0,\n  border: 0,\n  fontWeight: props.theme.weight.regular,\n  background: props.theme.complement,\n  transition: 'all .5s ease',\n  display: 'block',\n  margin: 'auto',\n\n  '&:hover': {\n    // boxShadow: function () {\n    //   if (props.theme.mode === 'dark') {\n    //     if (props.used) {\n    //       return '0 0 30px 8px rgba(255, 255, 255, 1)'\n    //     } else {\n    //       return '0 0 30px 8px rgba(255, 255, 255, .1)'\n    //     }\n    //   } else {\n    //     return false\n    //   }\n    // },\n    opacity: 1,\n    padding: !props.used && '.5rem 2.5rem',\n    transform: props.used && 'scale(1.2)'\n  },\n    // (() => {\n    //   \n    //     props.used ? `0 0 30px 8px rgba(255, 255, 255, 1)` : `0 0 30px 8px rgba(255, 255, 255, .1)`\n    //   } else { \n    //     return false\n    //   }\n    // }),\n    // boxShadow: (props.theme.mode === 'dark' && props.used === true) && `0 0 20px 3px red`,\n\n}))\n\nlet used = false;\n\nexport default function ThemeToggler (props) {\n  if (!used) {\n    used = true\n    return <Toggler onClick={props.toggleMode} used={false} {...props} />\n  } else {\n    return <Toggler onClick={props.toggleMode} used={true} {...props} />\n  }\n  \n\n  // return (\n    \n    \n    //\n    //\n    // TODO: figure out how to apply an animation on click. Having trouble referring to the \n    // button in order to add styles to it\n    //\n    //\n  // )\n}","import React from 'react'\nimport styled from 'styled-components'\n\nconst Real = styled.img(props => ({\n  position: 'absolute'\n}))\n\nconst Vector = styled.img(props => ({\n  background: props.theme.primary,\n  position: 'relative',\n  top: 0,\n  left: 0,\n  transition: 'all .5s ease !important',\n  '&:hover': {\n    background: props.theme.complement\n  }\n}))\n\nconst picStyles = {\n  width: '250px',\n  height: '250px',\n  borderRadius: '50%',\n  display: 'block',\n  transition: 'transform .5s ease, opacity .5s ease'\n}\n\nexport default function TwoFace (props) {\n  function showReal () {\n    // is there a way to factor this out? It doesn't work right now and I think its because the components aren't yet defined\n    let real = document.getElementById('real')\n    let vector = document.getElementById('vector')\n\n    vector.style.opacity = 0\n    real.style.opacity = 1\n    vector.style.transform = 'scale(1.2)'\n\n    setTimeout(() => {\n      vector.style.zIndex = -100\n      vector.style.transform = 'scale(1)'\n    }, 500)\n  }\n\n  function showVector() {\n    let real = document.getElementById('real')\n    let vector = document.getElementById('vector')\n\n    vector.style.opacity = 1\n    vector.style.zIndex = 100\n    real.style.transform = 'scale(1.2)'\n    real.style.opacity = 0\n\n    setTimeout(() => {\n      real.style.transform = 'scale(1)'\n    }, 500)\n  }\n\n  return (\n    <div {...props}> {/* I really don't like that you have to do all these workarounds to pass styles. WHy doesnt just setting it work in benWeber.js */}\n      <Real id='real' style={picStyles} src='/img/real.png' onClick={showVector}/>\n      <Vector id='vector' style={picStyles} src='/img/vec-t.png' onClick={showReal}/>\n    </div>\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\n// import github from ''\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\n  /* background-image: url('${require(`)}'); */\nconst Site = styled.a`\n  background-image: url('/img/${props => props.name}${props => props.theme.mode === 'dark' ? '-w' : '-b'}.png');\n  background-size: cover;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  margin: 0 .5rem;\n  transition: all .5s ease;\n  opacity: .8;\n\n  &:after {\n    color: #fff;\n  }\n\n  &:hover {\n    opacity: 1;\n    transform: scale(1.1);\n    animation: ${props => props.theme.mode === 'dark' ? 'pulseLight' : 'pulseDark'} 1s ease;\n  }\n`\n\nexport default function Media (props) {\n  return (\n    <Container {...props}>\n      <Site name='github' href='' />\n      <Site name='linkedin' href='' />\n      <Site name='mail' href='' />\n      <Site name='resume' href='' />\n    </Container>\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\n// import rgba from './bensLibrary'\n\n// I feel like theres a way to do this with a single function using bracket notation to call 'styled.h1' with 'styled['h1']'\n\nconst H1 = styled.h1(props => ({\n  marginTop: '3rem',\n  marginBottom: '1rem',\n  fontSize: '2rem',\n  color: props.color ? props.color : props.theme.complement,\n  fontWeight: props.weight ? props.weight : props.theme.weight.bold\n}))\n\nconst H2 = styled.h2(props => ({\n  marginLeft: '1rem',\n  '+ p': { marginLeft: '1rem' },\n  marginTop: '3rem',\n  marginBottom: '.8rem',\n  fontSize: '1.8rem',\n  color: props.color ? props.color : props.theme.primary,\n  fontWeight: props.weight ? props.weight : props.theme.weight.regular\n}))\n\nconst H3 = styled.h2(props => ({\n  marginLeft: '2rem',\n  '+ p': { marginLeft: '2rem' },\n  marginTop: '3rem',\n  marginBottom: '.5rem',\n  fontSize: '1.5rem',\n  color: props.color ? props.color : props.theme.accent,\n  fontWeight: props.weight ? props.weight : props.theme.weight.regular\n}))\n\nconst P = styled.p(props => ({\n  color: props.color ? props.color : props.theme.complement,\n  fontSize: '1.2rem',\n  fontWeight: props.weight ? props.weight : props.theme.weight.thin,\n  lineHeight: '2rem'\n}))\n\nconst Span = styled.span(props => ({\n  color: props.color ? props.color : props.theme.complement,\n  fontSize: '1.2rem',\n  fontWeight: props.weight ? props.weight : props.theme.weight.thin,\n  lineHeight: '2rem'\n}))\n\nexport default function Text (props) {\n  // there has to be a better way to do this\n  if (props.type === 'h1') {\n    return <H1 {...props}>{props.children}</H1>\n  }\n  else if (props.type === 'h2') {\n    return <H2 {...props}>{props.children}</H2>\n  } else if (props.type === 'h3') {\n    return <H3 {...props}>{props.children}</H3>\n  } else if (props.type === 'p'){\n    return <P {...props}>{props.children}</P>\n  } else if (props.type === 'span') {\n    return <Span {...props}>{props.children}</Span>\n  } else {\n    return <P {...props} style={{ color: 'red' }}>Unknown text type</P>\n  }\n}","import React from 'react'\nimport styled from 'styled-components'\n\nimport Text from './Text'\n\nconst Sketches_ = styled.div`\n  width: 100%;\n  display: grid;\n  grid-gap: 1vw;\n  grid-template-columns: repeat(4, 1fr);\n`\nconst Sketch = styled.div`\n  height: 200px;\n  background: #111;\n  z-index: 10;\n`\nconst SketchInfo = styled.div`\n  display: flex;\n  align-items: flex-end;\n  margin-left: 0;\n  opacity: 0;\n  height: 0;\n  transition: all .5s ease;\n  margin-bottom: 1rem;\n  > * { margin: 0 }\n  #separator {\n    margin-left: 15px;\n  }\n\n  &.visible {\n    opacity: 1;\n    height: 80px;\n  }\n`\nconst SketchPreview = styled.div`\n  width: 100%;\n  height: 0;\n  opacity: 0;\n  background: ${props => props.theme.primary};\n  border-radius: .25rem;\n  transition: .5s ease;\n  overflow: hidden;\n\n  .options {\n    transition: all .5s ease;\n    height: 0;\n    background: blue;\n    width: 100%;\n  }\n\n  &.active {\n    opacity: 1;\n    height: ${window.innerWidth * .8 * (9/16)}px;\n\n    .options {\n      height: 40px;\n    }\n  }\n`\n\nconst sketchData = [\n  {},\n  {},\n  {},\n  {},\n]\n\nexport default class Sketches extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { previewOpen: false, currentSketch: null }\n  }\n\n  showSketch(sketch) {\n    if (!this.state.previewOpen) {\n      document.querySelector('#sketchPreview').classList.add('active')\n      this.setState({ previewOpen: true })\n    }\n    \n    this.setState({ currentSketch: sketch })\n    document.querySelector('#sketchInfo').classList.add('visible')\n\n    if (sketch === this.state.currentSketch) {\n      document.querySelector('#sketchPreview').classList.remove('active')\n      document.querySelector('#sketchInfo').classList.remove('visible')\n      this.setState({ previewOpen: false, currentSketch: null })\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Sketches_>\n\n          {sketchData.map((sketch, i) => {\n            return (\n              <Sketch key={i} onClick={() => this.showSketch(i)}>\n\n              </Sketch>\n            )\n          })}\n\n        </Sketches_>\n\n        <SketchInfo id='sketchInfo'>\n          <Text type='h2' id='sketchName'>$Sketch_name</Text>\n          <Text type='h2' id='separator'>|</Text>\n          <Text type='p' id='sketchDescription'>$Sketch_description</Text>\n        </SketchInfo>\n\n        <SketchPreview id='sketchPreview'>\n          <div className='options' />\n        </SketchPreview>\n      </>\n    )\n  }\n}","import React from 'react'\nimport styled from 'styled-components'\n\nconst Gallery_ = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: .5rem;\n\n  @media only screen and (max-width: 1100px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media only screen and (max-width: 900px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`\n\nexport default function Gallery (props) {\n  return <Gallery_>{props.children}</Gallery_>\n}","import React from 'react'\nimport styled from 'styled-components'\n\nconst Project_ = styled.div`\n  background: url('/img/${props => props.preview}');\n  background-size: cover;\n  grid-area: ${props => props.id};\n  height: 400px;\n  overflow: hidden;\n  cursor: pointer;\n  /* box-shadow: 0 0 20px 0px white; */\n  /* border: ${props => props.theme.mode === 'dark' && `1px solid ${props.theme.primary}`}; */\n\n  &:hover {\n    .overlay {\n      transform: scale(1.05);\n      opacity: ${props => props.hide && 1};\n      h3 {\n        transition: color .5s ease;\n        color: ${props => props.theme.primary};\n      }\n    }\n  }\n\n  .overlay {\n    width: 100%;\n    height: 100%;\n    padding: 2rem;\n    background: #0008;\n    /* background: ${props => props.theme.mode === 'dark' ? `#fff2` : '#0008'}; */\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    opacity: ${props => props.hide ? 0 : 1};\n    transition: all .3s ease;\n    color: #fff;\n  }\n`\n\nexport default function Project (props) {\n  console.log(props)\n  return <Project_ {...props} />\n}","import React from 'react'\n\nimport Gallery from './Gallery'\nimport Project from './Project'\n\nconst projectData = [\n  { id: 'mesh', name: 'Particle Mesh', description: 'what the fuck did ou just say about me you little fuckin gbotch ill have you know that i a  afag', repo: '', demo: '', img: 'mesh.gif' },\n  { id: 'matrix', name: 'Raining Code', description: 'asdfasfasdf', repo: '', demo: '', img: 'matrix.gif' },\n  { id: 'star', name: 'Starfield', description: 'asdfasdfasdf', repo: '', demo: '', img: 'starfield.gif' },\n  // { id: 'light', name: 'Lightning', description: '', repo: '', demo: '', img: 'mesh.gif' },\n]\n\nconst projects = projectData.map((proj, i) => {\n  return (\n    <Project gridArea={proj.id} preview={proj.img} key={i}>\n      <div className='overlay'>\n        <h3 style={{ fontSize: '1.5rem' }}>{proj.name}</h3>\n        <p style={{ lineHeight: '1.5rem' }}>{proj.description}</p>\n      </div>\n    </Project>\n  )\n})\n\nexport default function Programming (props) {\n  return (\n    <Gallery>\n      {projects}\n    </Gallery>\n  )\n}","import React from 'react'\n\nimport Gallery from './Gallery'\nimport Project from './Project'\n\nconst projectData = [\n  { id: 'avole', description: 'what the fuck did ou just say about me you little fuckin gbotch ill have you know that i a  afag', img: 'avole.png' },\n  { id: 'airpact', description: 'asdfasfasdf', img: 'airpact-fire.png' },\n  { id: 'vizinet', description: 'asdfasdfasdf', img: 'vizinet.png' },\n]\n\nconst projects = projectData.map((proj, i) => {\n  return (\n    <Project hide gridArea={proj.id} preview={proj.img} key={i}>\n      <div className='overlay'>\n        <p>{proj.description}</p>\n      </div>\n    </Project>\n  )\n})\n\nexport default function Programming(props) {\n  return (\n    <Gallery>\n      {projects}\n    </Gallery>\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\n\nimport Text from './Text'\n\nconst Root = styled.div`\n  display: flex;\n  justify-content: space-between;\n  > div {\n    &.other { margin-left: 1rem }\n    border: 1px dashed red; \n  }\n`\n\nconst SkillList = styled.div`\n  * {\n    color: ${props => props.theme.complement}66;\n  }\n`\n// const Sep = styled.span`\n//   color: ${props => props.theme.accent};\n//   /* transform: translateY(-3px); */\n//   margin: 0 1rem 0 .5rem;\n//   font-size: 1.5rem;\n//   display: none;\n// `\n\nconst Mony = styled.span`\n  color: #9989;\n  font-style: italic;\n  font-weight: 200;\n  transform: translateY(-2px);\n  display: inline-block;\n  margin-left: 1rem;\n  \n  @media only screen and (max-width: 1350px) {\n    margin: 0;\n    display: block; \n  }\n`\n\nconst Other = styled.div`\n\n`\n\nexport default function Skills (props) {\n  return (\n    <Root>\n      <div>\n        <Text type='h2'>Web Development</Text>\n        <SkillList>\n          <Text type='h3'>HTML<Mony>Ben is pretty good at doing this. - Austin</Mony></Text>\n          <Text type='h3'>CSS<Mony>Ben writes really cool styles. I like using his styles! - NaN</Mony></Text>\n          <Text type='h3'>JS<Mony>What can I say, he's pretty good at it. - Tyler</Mony></Text>\n          <Text type='h3'>React<Mony>When Ben passes props to components, its tight. - Emily</Mony></Text>\n          <Text type='h3'>p5<Mony>Have you seen his animations? They're </Mony></Text>\n        </SkillList>\n      </div>\n\n      <div className='other'>\n        <Text type='h2'>ashflkahsdfhads</Text>\n        <SkillList>\n          <Text type='h3'>Java<Mony>He's actually not the best at Java. He's good, just not the best - Mom</Mony></Text>\n          <Text type='h3'>Kotlin<Mony>He made a few Android apps for a class and - Nick Cannon</Mony></Text>\n        </SkillList>\n      </div>\n    </Root>\n  )\n}\n\n/* //   ${breakpoint('sm')`\n//     grid-template-columns: repeat(2, 1fr);\n//   `} */","import React from 'react'\n// import { makeStyles } from '@material-ui/styles'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport P5Wrapper from 'react-p5-wrapper'\n\nimport ThemeToggler from './components/ThemeToggler'\nimport TwoFace from './components/TwoFace'\nimport Media from './components/Media'\nimport Sketches from './components/Sketches'\n// import follower from './follower'\nimport Text from './components/Text'\nimport Programming from './components/Programming'\nimport Design from './components/Design'\nimport Skills from './components/Skills'\nimport meshSketch from './particleMesh.js'\nimport { theme } from './styles'\n\nconst Root = styled.div`\n  width: 80vw;\n  margin: auto;\n  \n  canvas { z-index: -1 }\n\n  .themeToggler {\n    margin-top: 1rem\n  }\n\n  .twoFace {\n    display: flex;\n    justify-content: center;\n    margin-top: 2rem;\n  }\n\n  .media {\n    margin-top: 1rem;\n  }\n`\n\n// TODO: good font color: #2e444e\n\nexport default function BenWeber (props) {\n  return (\n    <Root>\n      \n      {/* <P5Wrapper theme={props.theme} sketch={meshSketch}></P5Wrapper> */}\n\n      <ThemeToggler className='themeToggler' toggleMode={props.toggleMode} />\n      <TwoFace className='twoFace' />\n      <Media className='media' />\n\n      <Text type='h1'>$Heading</Text>\n\n      <Sketches />\n\n      {/* <Text type='h1' bold>About Me</Text>\n      <Text type='p'>\n        How's it goin' future employer, I'm Ben Weber. I'm a graphic designer and web developer based in Seattle.\n        I'm a Junior at the University of Washington, looking for software and web development positions after I graduate in June 2020.\n      </Text> */}\n\n      {/* <Text type='h1'>What the fuck is up? I am an H1</Text>\n      <Text type='p'>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</Text>\n      <Text type='p'>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</Text>\n\n      <Text type='h2'>What the fuck is up? I am an H2</Text>\n      <Text type='p'>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</Text>\n\n      <Text type='h3'>What the fuck is up? I am an H3</Text>\n      <Text type='p'>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</Text> */}\n{/* \n      <Text type='h1'>Programming Projects</Text>\n      <Programming />\n\n      <div className='w5' />\n\n      <Text type='h1'>Design Work</Text>\n      <Design />\n\n      <div className='w5' />\n\n      <Text type='h1'>Skills</Text>\n      <Skills />\n      <div className='w5' /> */}\n\n    \n{/*       \n      <Gallery>\n        <ProgrammingProject></ProgrammingProject>\n        <ProgrammingProject></ProgrammingProject>\n        <ProgrammingProject></ProgrammingProject>\n        <ProgrammingProject></ProgrammingProject>\n        <ProgrammingProject></ProgrammingProject>\n        <ProgrammingProject></ProgrammingProject>\n        <ProgrammingProject></ProgrammingProject>\n        <ProgrammingProject></ProgrammingProject>\n        <ProgrammingProject></ProgrammingProject>\n      </Gallery> */}\n\n      {/* use Luke's daydream design to display each of your sketches */}\n      \n      {/* Don't even worry about graphic design until you have all the priogramming stuff done */}\n\n      {/* <Gallery>\n        <DesignProject></DesignProject>\n        <DesignProject></DesignProject>\n        <DesignProject></DesignProject>\n        <DesignProject></DesignProject>\n      </Gallery> */}\n\n      {/* <Text type='h1' style={{ marginTop: '2rem' }}>Graphic Design Work</Text> */}\n\n      {/* TODO: I think you need to use the withTheme higher orer component so all compnents have access to the theme */}\n      {/* <P5Wrapper sketch={follower} theme={props.theme} /> */}\n      {/* TODO: fix bug where pic has no height when real is shown. Should be a simple fix */}\n    </Root>\n  )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'styled-components'\n\nimport { theme, GlobalStyles } from './styles'\nimport BenWeber from './benWeber'\n\nclass App extends React.Component {\n  state = {\n    mode: 'light'\n  }\n\n  toggleMode = () => {\n    this.state.mode === 'dark' ? this.setState({ mode: 'light' })\n      : this.setState({ mode: 'dark' })\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme[this.state.mode]}>\n        <GlobalStyles />\n        {/* Explicitly passing theme because only styled components have access via ThemeProvider */}\n        <BenWeber theme={theme[this.state.mode]} toggleMode={this.toggleMode} />\n      </ThemeProvider>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}