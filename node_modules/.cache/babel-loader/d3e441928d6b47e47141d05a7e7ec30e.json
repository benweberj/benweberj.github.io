{"ast":null,"code":"export default function sketch(p) {\n  let canvas;\n  let grid = [];\n  let tileSize;\n\n  p.setup = () => {\n    canvas = p.createCanvas(p.windowWidth, p.windowHeight);\n    p.background('#0d1e35');\n    tileSize = p.width / 50;\n\n    for (let x = 0; x < p.width; x += tileSize) {\n      let row = [];\n\n      for (let y = 0; y < p.height; y += tileSize) {\n        row.push(new Cell(p, p.createVector(x, y), tileSize));\n      }\n\n      grid.push(row);\n    }\n  };\n\n  p.draw = () => {\n    p.clear();\n    p.background('#0d1e35');\n    grid.forEach(col => {\n      col.forEach(cell => {\n        cell.draw();\n      });\n    });\n\n    p.myCustomRedrawAccordingToNewPropsHandler = newProps => {\n      if (canvas) {\n        p.fill(newProps.color);\n      }\n    };\n  };\n\n  class Cell {\n    constructor(p, pos, tileSize) {\n      this.p = p;\n      this.pos = pos;\n      this.tileSize = tileSize;\n    }\n\n    draw() {\n      this.p.fill(this.p.random(255), this.p.random(255), this.p.random(255));\n      this.p.rect(this.pos.x, this.pos.y, tileSize);\n    }\n\n  }\n}","map":{"version":3,"sources":["/Users/ben/Desktop/react-personalsite/src/particleMesh.js"],"names":["sketch","p","canvas","grid","tileSize","setup","createCanvas","windowWidth","windowHeight","background","width","x","row","y","height","push","Cell","createVector","draw","clear","forEach","col","cell","myCustomRedrawAccordingToNewPropsHandler","newProps","fill","color","constructor","pos","random","rect"],"mappings":"AAAA,eAAe,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AAChC,MAAIC,MAAJ;AACA,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIC,QAAJ;;AAEAH,EAAAA,CAAC,CAACI,KAAF,GAAU,MAAM;AACdH,IAAAA,MAAM,GAAGD,CAAC,CAACK,YAAF,CAAeL,CAAC,CAACM,WAAjB,EAA8BN,CAAC,CAACO,YAAhC,CAAT;AACAP,IAAAA,CAAC,CAACQ,UAAF,CAAa,SAAb;AACAL,IAAAA,QAAQ,GAAGH,CAAC,CAACS,KAAF,GAAU,EAArB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,CAAC,CAACS,KAAtB,EAA6BC,CAAC,IAAIP,QAAlC,EAA4C;AAC1C,UAAIQ,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,CAAC,CAACa,MAAtB,EAA8BD,CAAC,IAAIT,QAAnC,EAA6C;AAC3CQ,QAAAA,GAAG,CAACG,IAAJ,CAAS,IAAIC,IAAJ,CAASf,CAAT,EAAYA,CAAC,CAACgB,YAAF,CAAeN,CAAf,EAAkBE,CAAlB,CAAZ,EAAkCT,QAAlC,CAAT;AACD;;AACDD,MAAAA,IAAI,CAACY,IAAL,CAAUH,GAAV;AACD;AACF,GAZD;;AAcAX,EAAAA,CAAC,CAACiB,IAAF,GAAS,MAAM;AACbjB,IAAAA,CAAC,CAACkB,KAAF;AACAlB,IAAAA,CAAC,CAACQ,UAAF,CAAa,SAAb;AACAN,IAAAA,IAAI,CAACiB,OAAL,CAAaC,GAAG,IAAI;AAClBA,MAAAA,GAAG,CAACD,OAAJ,CAAYE,IAAI,IAAI;AAClBA,QAAAA,IAAI,CAACJ,IAAL;AACD,OAFD;AAGD,KAJD;;AAMFjB,IAAAA,CAAC,CAACsB,wCAAF,GAA8CC,QAAD,IAAc;AACzD,UAAItB,MAAJ,EAAY;AACVD,QAAAA,CAAC,CAACwB,IAAF,CAAOD,QAAQ,CAACE,KAAhB;AACD;AACF,KAJD;AAKD,GAdC;;AAgBF,QAAMV,IAAN,CAAW;AACTW,IAAAA,WAAW,CAAC1B,CAAD,EAAI2B,GAAJ,EAASxB,QAAT,EAAmB;AAC5B,WAAKH,CAAL,GAASA,CAAT;AACA,WAAK2B,GAAL,GAAWA,GAAX;AACA,WAAKxB,QAAL,GAAgBA,QAAhB;AACD;;AAEDc,IAAAA,IAAI,GAAG;AACL,WAAKjB,CAAL,CAAOwB,IAAP,CAAY,KAAKxB,CAAL,CAAO4B,MAAP,CAAc,GAAd,CAAZ,EAAgC,KAAK5B,CAAL,CAAO4B,MAAP,CAAc,GAAd,CAAhC,EAAoD,KAAK5B,CAAL,CAAO4B,MAAP,CAAc,GAAd,CAApD;AACA,WAAK5B,CAAL,CAAO6B,IAAP,CAAY,KAAKF,GAAL,CAASjB,CAArB,EAAwB,KAAKiB,GAAL,CAASf,CAAjC,EAAoCT,QAApC;AACD;;AAVQ;AAYV","sourcesContent":["export default function sketch(p) {\n  let canvas  \n  let grid = []\n  let tileSize\n\n  p.setup = () => {\n    canvas = p.createCanvas(p.windowWidth, p.windowHeight)\n    p.background('#0d1e35')\n    tileSize = p.width / 50\n\n    for (let x = 0; x < p.width; x += tileSize) {\n      let row = []\n      for (let y = 0; y < p.height; y += tileSize) {\n        row.push(new Cell(p, p.createVector(x, y), tileSize))\n      }\n      grid.push(row)\n    }\n  }\n\n  p.draw = () => {\n    p.clear()\n    p.background('#0d1e35')\n    grid.forEach(col => {\n      col.forEach(cell => {\n        cell.draw()\n      })\n    })\n\n  p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n    if (canvas) {\n      p.fill(newProps.color)\n    }\n  }\n}\n\nclass Cell {\n  constructor(p, pos, tileSize) {\n    this.p = p\n    this.pos = pos\n    this.tileSize = tileSize\n  }\n\n  draw() {\n    this.p.fill(this.p.random(255), this.p.random(255), this.p.random(255))\n    this.p.rect(this.pos.x, this.pos.y, tileSize)\n  }\n}\n}"]},"metadata":{},"sourceType":"module"}