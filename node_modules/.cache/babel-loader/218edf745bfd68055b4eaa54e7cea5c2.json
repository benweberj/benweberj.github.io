{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Repos/react-personal-site/src/components/Sketches.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport P5Wrapper from 'react-p5-wrapper';\nimport Text from './Text';\nimport Div from './Div';\nimport particleMesh from '../particleMesh';\nimport AnimateHeight from 'react-animate-height'; // import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n\nconst Sketches_ = styled.div`\n  width: 100%;\n  display: grid;\n  grid-gap: 1vw;\n  grid-template-columns: repeat(4, 1fr);\n  @media only screen and (max-width: 1000px) { grid-template-columns: repeat(3, 1fr); }\n  @media only screen and (max-width: 700px) { grid-template-columns: repeat(2, 1fr); }\n`; // const Sketch = styled.div`\n//   height: 100px;\n//   background: ${props => props.theme.complement};\n//   border-radius: .25rem;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   z-index: 10;\n//   &:hover {\n//     div {\n//       transform: scale(1.2);\n//     }\n//   }\n// `\n\nconst Icon = styled.div`\n  width: 100px;\n  height: 100px;\n  background-image: url('${props => require('../img/sketches/' + props.name + (props.theme.mode === 'dark' ? '-b' : '-w') + '.png')}');\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  transition: all .5s ease;\n`; // const SketchInfo = styled.div`\n//   display: flex;\n//   align-items: flex-end;\n//   margin-left: 0;\n//   opacity: 0;\n//   height: 0;\n//   transition: all .5s ease;\n//   margin-bottom: 1rem;\n//   > * { margin: 0 }\n//   #separator {\n//     margin-left: 15px;\n//   }\n//   &.visible {\n//     opacity: 1;\n//     height: 80px;\n//   }\n// `\n// const SketchPreview = styled.div`\n//   width: 100%;\n//   height: 0;\n//   opacity: 0;\n//   /* background: ${props => props.theme.complement}; */\n//   border: 1px dashed ${props => props.theme.complement};\n//   border-radius: .25rem;\n//   transition: .5s ease;\n//   overflow: hidden;\n//   .options {\n//     transition: all .5s ease;\n//     height: 0;\n//     background: ${props => props.theme.base}55;\n//     width: 100%;\n//   }\n//   &.active {\n//     opacity: 1;\n//     /* height: ${window.innerWidth * .8 * (9/16)}px; */\n//     /* height: 0px; */\n//     .options {\n//       height: 40px;\n//     }\n//     .liveSketch {\n//       height: 100%;\n//       /* background: red; */\n//     }\n//   }\n// `\n\nconst sketchData = [{\n  name: 'Particle Mesh',\n  sketch: particleMesh,\n  icon: 'nodes',\n  description: 'One of my first complex sketches. Nodes attract to the cursor.'\n}, {\n  name: 'Lightning',\n  sketch: 'b',\n  icon: 'lightning',\n  description: '...'\n}, {\n  name: 'Raining Katakana',\n  sketch: 'c',\n  icon: 'katakana',\n  description: 'Recreation of the raining code animation from the Matrix'\n}, {\n  name: 'Orbit?',\n  sketch: 'd',\n  icon: 'orbit',\n  description: '...'\n}, {\n  name: 'Light Speed',\n  sketch: 'e',\n  icon: 'starfield',\n  description: 'Animation resembling the light-speed effect from Star Wars.'\n}];\nexport default (props => {\n  const {\n    theme\n  } = props;\n  const [sketch, setSketch] = useState(null);\n\n  const handleClick = clicked => {\n    if (sketch && sketch.name === clicked.name) {\n      setSketch(null);\n    } else {\n      setSketch(clicked);\n    }\n  };\n\n  const suffix = props.theme.mode === 'dark' ? 'b' : 'w';\n  return /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Sketches_, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, sketchData.map((sketch, i) => /*#__PURE__*/React.createElement(Div, {\n    center: true,\n    key: i,\n    bg: theme.complement,\n    p: 20,\n    onClick: _ => handleClick(sketch),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    height: '100%',\n    src: require(`../img/sketches/${sketch.icon}-${suffix}.png`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(AnimateHeight, {\n    height: sketch ? 'auto' : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    w: '100%',\n    h: '60vw',\n    bg: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  })));\n}); // export default class Sketches extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = { previewOpen: false, currentSketch: null }\n//   }\n//   showSketch(name, description, sketch) {\n//     const sketchPreview = document.querySelector('#sketchPreview')\n//     const sketchInfo = document.querySelector('#sketchInfo')\n//     if (!this.state.previewOpen) {\n//       sketchPreview.classList.add('active')\n//       sketchPreview.style.height = `${sketchPreview.offsetWidth * (9/16)}px`\n//       this.setState({ previewOpen: true })\n//     }\n//     // Show the current sketch in the preview\n//     this.setState({ currentSketch: sketch })\n//     sketchInfo.classList.add('visible')\n//     document.querySelector('#sketchName').innerText = name\n//     document.querySelector('#sketchDescription').innerText = description\n//     if (sketch === this.state.currentSketch) {\n//       sketchPreview.classList.remove('active')\n//       sketchInfo.classList.remove('visible')\n//       sketchPreview.style.height = 0;\n//       this.setState({ previewOpen: false, currentSketch: null })\n//     }\n//   }\n//   render() {\n//     return (\n//       <>\n//         <Sketches_>\n//           {sketchData.map((sketch, i) => {\n//             return (\n//               <Sketch key={i} onClick={() => this.showSketch(sketch.name, sketch.description, sketch.sketch)}>\n//                 <Icon name={sketch.icon} />\n//               </Sketch>\n//             )\n//           })}\n//         </Sketches_>\n//         <SketchInfo id='sketchInfo'>\n//           <Text type='h2' id='sketchName'>$Sketch_name</Text>\n//           <Text type='h2' id='separator'>|</Text>\n//           <Text type='p' id='sketchDescription'>$Sketch_description</Text>\n//         </SketchInfo>\n//         <SketchPreview id='sketchPreview'>\n//           <div className='options' />\n//           <div className='liveSketch'>\n//             <P5Wrapper sketch={this.state.currentSketch} theme={props => props.theme} />\n//           </div>\n//         </SketchPreview>\n//       </>\n//     )\n//   }\n// }","map":{"version":3,"sources":["/Users/ben/Repos/react-personal-site/src/components/Sketches.jsx"],"names":["React","useState","styled","P5Wrapper","Text","Div","particleMesh","AnimateHeight","Sketches_","div","Icon","props","require","name","theme","mode","sketchData","sketch","icon","description","setSketch","handleClick","clicked","suffix","map","i","complement","_"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport P5Wrapper from 'react-p5-wrapper'\n\nimport Text from './Text'\nimport Div from './Div'\nimport particleMesh from '../particleMesh'\n\nimport AnimateHeight from 'react-animate-height'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n\nconst Sketches_ = styled.div`\n  width: 100%;\n  display: grid;\n  grid-gap: 1vw;\n  grid-template-columns: repeat(4, 1fr);\n  @media only screen and (max-width: 1000px) { grid-template-columns: repeat(3, 1fr); }\n  @media only screen and (max-width: 700px) { grid-template-columns: repeat(2, 1fr); }\n`\n// const Sketch = styled.div`\n//   height: 100px;\n//   background: ${props => props.theme.complement};\n//   border-radius: .25rem;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   z-index: 10;\n\n//   &:hover {\n//     div {\n//       transform: scale(1.2);\n//     }\n//   }\n// `\nconst Icon = styled.div`\n  width: 100px;\n  height: 100px;\n  background-image: url('${props => require('../img/sketches/' + props.name + (props.theme.mode === 'dark' ? '-b' : '-w') + '.png')}');\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  transition: all .5s ease;\n`\n// const SketchInfo = styled.div`\n//   display: flex;\n//   align-items: flex-end;\n//   margin-left: 0;\n//   opacity: 0;\n//   height: 0;\n//   transition: all .5s ease;\n//   margin-bottom: 1rem;\n//   > * { margin: 0 }\n//   #separator {\n//     margin-left: 15px;\n//   }\n\n//   &.visible {\n//     opacity: 1;\n//     height: 80px;\n//   }\n// `\n// const SketchPreview = styled.div`\n//   width: 100%;\n//   height: 0;\n//   opacity: 0;\n//   /* background: ${props => props.theme.complement}; */\n//   border: 1px dashed ${props => props.theme.complement};\n//   border-radius: .25rem;\n//   transition: .5s ease;\n//   overflow: hidden;\n\n//   .options {\n//     transition: all .5s ease;\n//     height: 0;\n//     background: ${props => props.theme.base}55;\n//     width: 100%;\n//   }\n\n//   &.active {\n//     opacity: 1;\n//     /* height: ${window.innerWidth * .8 * (9/16)}px; */\n//     /* height: 0px; */\n\n//     .options {\n//       height: 40px;\n//     }\n\n//     .liveSketch {\n//       height: 100%;\n//       /* background: red; */\n//     }\n//   }\n// `\n\nconst sketchData = [\n  { name: 'Particle Mesh', sketch: particleMesh, icon: 'nodes', description: 'One of my first complex sketches. Nodes attract to the cursor.' },\n  { name: 'Lightning', sketch: 'b', icon: 'lightning', description: '...' },\n  { name: 'Raining Katakana', sketch: 'c', icon: 'katakana', description: 'Recreation of the raining code animation from the Matrix' },\n  { name: 'Orbit?', sketch: 'd', icon: 'orbit', description: '...' },\n  { name: 'Light Speed', sketch: 'e', icon: 'starfield', description: 'Animation resembling the light-speed effect from Star Wars.' }\n]\n\nexport default props => {\n  const { theme } = props\n  const [sketch, setSketch] = useState(null)\n\n  const handleClick = clicked => {\n    if (sketch && sketch.name === clicked.name) {\n      setSketch(null)\n    } else {\n      setSketch(clicked)\n    }\n  }\n\n  const suffix = props.theme.mode === 'dark' ? 'b' : 'w'\n  return (\n    <Div>\n      <Sketches_>\n        {sketchData.map((sketch, i) => (\n          <Div center key={i} bg={theme.complement} p={20} onClick={_ => handleClick(sketch)}>\n            <img height={'100%'} src={require(`../img/sketches/${sketch.icon}-${suffix}.png`)} />\n          </Div>\n        ))}\n      </Sketches_>\n\n      \n      <AnimateHeight height={sketch ? 'auto' : 0}>\n        <Div w={'100%'} h={'60vw'} bg='red' />\n      </AnimateHeight>\n    </Div>\n  )\n}\n\n\n// export default class Sketches extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = { previewOpen: false, currentSketch: null }\n//   }\n\n//   showSketch(name, description, sketch) {\n//     const sketchPreview = document.querySelector('#sketchPreview')\n//     const sketchInfo = document.querySelector('#sketchInfo')\n\n//     if (!this.state.previewOpen) {\n//       sketchPreview.classList.add('active')\n//       sketchPreview.style.height = `${sketchPreview.offsetWidth * (9/16)}px`\n//       this.setState({ previewOpen: true })\n//     }\n    \n//     // Show the current sketch in the preview\n//     this.setState({ currentSketch: sketch })\n//     sketchInfo.classList.add('visible')\n//     document.querySelector('#sketchName').innerText = name\n//     document.querySelector('#sketchDescription').innerText = description\n\n//     if (sketch === this.state.currentSketch) {\n//       sketchPreview.classList.remove('active')\n//       sketchInfo.classList.remove('visible')\n//       sketchPreview.style.height = 0;\n//       this.setState({ previewOpen: false, currentSketch: null })\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <>\n//         <Sketches_>\n\n//           {sketchData.map((sketch, i) => {\n//             return (\n//               <Sketch key={i} onClick={() => this.showSketch(sketch.name, sketch.description, sketch.sketch)}>\n//                 <Icon name={sketch.icon} />\n//               </Sketch>\n//             )\n//           })}\n\n//         </Sketches_>\n\n//         <SketchInfo id='sketchInfo'>\n//           <Text type='h2' id='sketchName'>$Sketch_name</Text>\n//           <Text type='h2' id='separator'>|</Text>\n//           <Text type='p' id='sketchDescription'>$Sketch_description</Text>\n//         </SketchInfo>\n\n//         <SketchPreview id='sketchPreview'>\n//           <div className='options' />\n//           <div className='liveSketch'>\n//             <P5Wrapper sketch={this.state.currentSketch} theme={props => props.theme} />\n//           </div>\n//         </SketchPreview>\n//       </>\n//     )\n//   }\n// }"]},"metadata":{},"sourceType":"module"}