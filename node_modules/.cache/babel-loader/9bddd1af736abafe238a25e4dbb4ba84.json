{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nconst Text = styled.p(props => ({\n  fontSize: props.type === 'h1' ? 50 : props.type === 'h2' ? 40 : props.type === 'h3' ? 25 : 15,\n  margin: props.m && props.m,\n  marginLeft: props.ml || props.mx || 0,\n  marginRight: props.mr || props.mx || 0,\n  marginTop: props.mt || props.my || 0,\n  marginBottom: props.mb || props.my || 0,\n  padding: props.p && props.p,\n  paddingLeft: props.pl || props.px || 0,\n  paddingRight: props.pr || props.px || 0,\n  paddingTop: props.pt || props.py || 0,\n  paddingBottom: props.pb || props.py || 0,\n  fontWeight: props.bold ? props.theme.bold : props.light ? props.theme.light : props.theme.regular,\n  color: props.color ? props.color : props.theme.complement\n}));\nexport default Text; // const H1 = styled.h1(props => ({\n//   marginTop: '3rem',\n//   marginBottom: '1rem',\n//   fontSize: '2rem',\n//   color: props.color ? props.color : props.theme.complement,\n//   fontWeight: props.weight ? props.weight : props.theme.weight.bold\n// }))\n// const H2 = styled.h2(props => ({\n//   marginLeft: '1rem',\n//   '+ p': { marginLeft: '1rem' },\n//   marginTop: '3rem',\n//   marginBottom: '.8rem',\n//   fontSize: '1.8rem',\n//   color: props.color ? props.color : props.theme.primary,\n//   fontWeight: props.weight ? props.weight : props.theme.weight.regular\n// }))\n// const H3 = styled.h2(props => ({\n//   marginLeft: '2rem',\n//   '+ p': { marginLeft: '2rem' },\n//   marginTop: '3rem',\n//   marginBottom: '.5rem',\n//   fontSize: '1.5rem',\n//   color: props.color ? props.color : props.theme.accent,\n//   fontWeight: props.weight ? props.weight : props.theme.weight.regular\n// }))\n// const P = styled.p(props => ({\n//   color: props.color ? props.color : props.theme.complement,\n//   fontSize: '1.2rem',\n//   fontWeight: props.weight ? props.weight : props.theme.weight.thin,\n//   lineHeight: '2rem'\n// }))\n// const Span = styled.span(props => ({\n//   color: props.color ? props.color : props.theme.complement,\n//   fontSize: '1.2rem',\n//   fontWeight: props.weight ? props.weight : props.theme.weight.thin,\n//   lineHeight: '2rem'\n// }))\n// import React from 'react'\n// import { withStyles } from '@material-ui/core/styles'\n// const localStyles = theme => ({\n//   text: {\n//     color: theme.secondary,\n//     transition: 'all .5s ease',\n//     fontWeight: theme.regular,\n//     margin: 0,\n//     display: 'block',\n//     '& *': { fontSize: 'inherit', color: 'inherit' },\n//     '& b': { fontWeight: theme.bold },\n//   },\n//   light: { fontWeight: `${theme.light} !important` },\n//   regular: { fontWeight: `${theme.regular} !important` },\n//   semibold: { fontWeight: `${theme.semibold} !important` },\n//   bold: { fontWeight: `${theme.bold} !important` },\n//   accent: { color: `${theme.accent} !important` },\n// })\n// function Text(props) {\n//   const {\n//     children, classes, style, className, id,\n//     type, size, light, bold, center, inline, regular, semibold, accent,\n//     mb, mt, ml, mr, mx, my, m,\n//     pb, pt, pl, pr, px, py, p,\n//     onClick, nowrap\n//   } = props\n//   let textSize = ((val) => {\n//     switch (val) {\n//       case 'h1': return '4rem'\n//       case 'h2': return '2.5rem'\n//       case 'h3': return '1.5rem'\n//       case 'h4': return '1.25rem'\n//       case 'h5': return '1rem'\n//       default: return '1rem'\n//     }\n//   })(type)\n//   if (size) textSize = `${size}px`\n//   if (inline) textSize = 'inherit'\n//   let propStyles = {\n//     marginLeft: ml || mx || m || 0,\n//     marginRight: mr || mx || m || 0,\n//     marginTop: mt || my || m || 0,\n//     marginBottom: mb || my || m || 0,\n//     paddingLeft: pl || px || p || 0,\n//     paddingRight: pr || px || p || 0,\n//     paddingTop: pt || py || p || 0,\n//     paddingBottom: pb || py || p || 0,\n//     display: inline && 'inline',\n//     fontWeight: inline && 'inherit',\n//     textAlign: center && 'center',\n//     fontSize: textSize,\n//     whiteSpace: nowrap && 'nowrap',\n//     textOverflow: nowrap && 'ellipsis',\n//   }\n//   if (inline) propStyles = { ...propStyles, color: 'inherit', transition: 'initial' }\n//   let classNameList = `\n//     ${classes.text}\n//     ${bold && classes.bold}\n//     ${light && classes.light}\n//     ${regular && classes.regular}\n//     ${semibold && classes.semibold} \n//     ${accent && classes.accent} \n//     ${className}\n//   `\n//   return (\n//     <p onClick={onClick}\n//       id={id}\n//       className={classNameList}\n//       style={{ ...propStyles, ...style }}\n//     >\n//       {children}\n//     </p>\n//   )\n// }\n// export default withStyles(localStyles)(Text)","map":{"version":3,"sources":["/Users/ben/Repos/react-personal-site/src/components/Text.jsx"],"names":["React","styled","Text","p","props","fontSize","type","margin","m","marginLeft","ml","mx","marginRight","mr","marginTop","mt","my","marginBottom","mb","padding","paddingLeft","pl","px","paddingRight","pr","paddingTop","pt","py","paddingBottom","pb","fontWeight","bold","theme","light","regular","color","complement"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,CAAP,CAASC,KAAK,KAAK;AAC9BC,EAAAA,QAAQ,EAAED,KAAK,CAACE,IAAN,KAAe,IAAf,GAAsB,EAAtB,GAA2BF,KAAK,CAACE,IAAN,KAAe,IAAf,GAAsB,EAAtB,GAA2BF,KAAK,CAACE,IAAN,KAAe,IAAf,GAAsB,EAAtB,GAA2B,EAD7D;AAG9BC,EAAAA,MAAM,EAAEH,KAAK,CAACI,CAAN,IAAWJ,KAAK,CAACI,CAHK;AAI9BC,EAAAA,UAAU,EAAEL,KAAK,CAACM,EAAN,IAAYN,KAAK,CAACO,EAAlB,IAAwB,CAJN;AAK9BC,EAAAA,WAAW,EAAER,KAAK,CAACS,EAAN,IAAYT,KAAK,CAACO,EAAlB,IAAwB,CALP;AAM9BG,EAAAA,SAAS,EAAEV,KAAK,CAACW,EAAN,IAAYX,KAAK,CAACY,EAAlB,IAAwB,CANL;AAO9BC,EAAAA,YAAY,EAAEb,KAAK,CAACc,EAAN,IAAYd,KAAK,CAACY,EAAlB,IAAwB,CAPR;AAS9BG,EAAAA,OAAO,EAAEf,KAAK,CAACD,CAAN,IAAWC,KAAK,CAACD,CATI;AAU9BiB,EAAAA,WAAW,EAAEhB,KAAK,CAACiB,EAAN,IAAYjB,KAAK,CAACkB,EAAlB,IAAwB,CAVP;AAW9BC,EAAAA,YAAY,EAAEnB,KAAK,CAACoB,EAAN,IAAYpB,KAAK,CAACkB,EAAlB,IAAwB,CAXR;AAY9BG,EAAAA,UAAU,EAAErB,KAAK,CAACsB,EAAN,IAAYtB,KAAK,CAACuB,EAAlB,IAAwB,CAZN;AAa9BC,EAAAA,aAAa,EAAExB,KAAK,CAACyB,EAAN,IAAYzB,KAAK,CAACuB,EAAlB,IAAwB,CAbT;AAe9BG,EAAAA,UAAU,EAAE1B,KAAK,CAAC2B,IAAN,GAAa3B,KAAK,CAAC4B,KAAN,CAAYD,IAAzB,GAAgC3B,KAAK,CAAC6B,KAAN,GAAc7B,KAAK,CAAC4B,KAAN,CAAYC,KAA1B,GAAkC7B,KAAK,CAAC4B,KAAN,CAAYE,OAf5D;AAgB9BC,EAAAA,KAAK,EAAE/B,KAAK,CAAC+B,KAAN,GAAc/B,KAAK,CAAC+B,KAApB,GAA4B/B,KAAK,CAAC4B,KAAN,CAAYI;AAhBjB,CAAL,CAAd,CAAb;AAmBA,eAAelC,IAAfsourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Text = styled.p(props => ({\n  fontSize: props.type === 'h1' ? 50 : props.type === 'h2' ? 40 : props.type === 'h3' ? 25 : 15,\n\n  margin: props.m && props.m,\n  marginLeft: props.ml || props.mx || 0,\n  marginRight: props.mr || props.mx || 0,\n  marginTop: props.mt || props.my || 0,\n  marginBottom: props.mb || props.my || 0,\n\n  padding: props.p && props.p,\n  paddingLeft: props.pl || props.px || 0,\n  paddingRight: props.pr || props.px || 0,\n  paddingTop: props.pt || props.py || 0,\n  paddingBottom: props.pb || props.py || 0,\n\n  fontWeight: props.bold ? props.theme.bold : props.light ? props.theme.light : props.theme.regular,\n  color: props.color ? props.color : props.theme.complement,\n}))\n\nexport default Text\n\n// const H1 = styled.h1(props => ({\n//   marginTop: '3rem',\n//   marginBottom: '1rem',\n//   fontSize: '2rem',\n//   color: props.color ? props.color : props.theme.complement,\n//   fontWeight: props.weight ? props.weight : props.theme.weight.bold\n// }))\n\n// const H2 = styled.h2(props => ({\n//   marginLeft: '1rem',\n//   '+ p': { marginLeft: '1rem' },\n//   marginTop: '3rem',\n//   marginBottom: '.8rem',\n//   fontSize: '1.8rem',\n//   color: props.color ? props.color : props.theme.primary,\n//   fontWeight: props.weight ? props.weight : props.theme.weight.regular\n// }))\n\n// const H3 = styled.h2(props => ({\n//   marginLeft: '2rem',\n//   '+ p': { marginLeft: '2rem' },\n//   marginTop: '3rem',\n//   marginBottom: '.5rem',\n//   fontSize: '1.5rem',\n//   color: props.color ? props.color : props.theme.accent,\n//   fontWeight: props.weight ? props.weight : props.theme.weight.regular\n// }))\n\n// const P = styled.p(props => ({\n//   color: props.color ? props.color : props.theme.complement,\n//   fontSize: '1.2rem',\n//   fontWeight: props.weight ? props.weight : props.theme.weight.thin,\n//   lineHeight: '2rem'\n// }))\n\n// const Span = styled.span(props => ({\n//   color: props.color ? props.color : props.theme.complement,\n//   fontSize: '1.2rem',\n//   fontWeight: props.weight ? props.weight : props.theme.weight.thin,\n//   lineHeight: '2rem'\n// }))\n\n\n\n// import React from 'react'\n\n// import { withStyles } from '@material-ui/core/styles'\n\n// const localStyles = theme => ({\n//   text: {\n//     color: theme.secondary,\n//     transition: 'all .5s ease',\n//     fontWeight: theme.regular,\n//     margin: 0,\n//     display: 'block',\n//     '& *': { fontSize: 'inherit', color: 'inherit' },\n//     '& b': { fontWeight: theme.bold },\n//   },\n\n//   light: { fontWeight: `${theme.light} !important` },\n//   regular: { fontWeight: `${theme.regular} !important` },\n//   semibold: { fontWeight: `${theme.semibold} !important` },\n//   bold: { fontWeight: `${theme.bold} !important` },\n//   accent: { color: `${theme.accent} !important` },\n// })\n\n// function Text(props) {\n//   const {\n//     children, classes, style, className, id,\n//     type, size, light, bold, center, inline, regular, semibold, accent,\n//     mb, mt, ml, mr, mx, my, m,\n//     pb, pt, pl, pr, px, py, p,\n//     onClick, nowrap\n//   } = props\n\n//   let textSize = ((val) => {\n//     switch (val) {\n//       case 'h1': return '4rem'\n//       case 'h2': return '2.5rem'\n//       case 'h3': return '1.5rem'\n//       case 'h4': return '1.25rem'\n//       case 'h5': return '1rem'\n//       default: return '1rem'\n//     }\n//   })(type)\n//   if (size) textSize = `${size}px`\n//   if (inline) textSize = 'inherit'\n\n//   let propStyles = {\n//     marginLeft: ml || mx || m || 0,\n//     marginRight: mr || mx || m || 0,\n//     marginTop: mt || my || m || 0,\n//     marginBottom: mb || my || m || 0,\n\n//     paddingLeft: pl || px || p || 0,\n//     paddingRight: pr || px || p || 0,\n//     paddingTop: pt || py || p || 0,\n//     paddingBottom: pb || py || p || 0,\n\n//     display: inline && 'inline',\n//     fontWeight: inline && 'inherit',\n//     textAlign: center && 'center',\n//     fontSize: textSize,\n//     whiteSpace: nowrap && 'nowrap',\n//     textOverflow: nowrap && 'ellipsis',\n//   }\n//   if (inline) propStyles = { ...propStyles, color: 'inherit', transition: 'initial' }\n\n//   let classNameList = `\n//     ${classes.text}\n//     ${bold && classes.bold}\n//     ${light && classes.light}\n//     ${regular && classes.regular}\n//     ${semibold && classes.semibold} \n//     ${accent && classes.accent} \n//     ${className}\n//   `\n\n//   return (\n//     <p onClick={onClick}\n//       id={id}\n//       className={classNameList}\n//       style={{ ...propStyles, ...style }}\n//     >\n//       {children}\n//     </p>\n//   )\n// }\n\n// export default withStyles(localStyles)(Text)"]},"metadata":{},"sourceType":"module"}