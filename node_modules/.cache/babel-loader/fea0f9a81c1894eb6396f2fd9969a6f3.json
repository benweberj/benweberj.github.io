{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/react-personalsite/src/themeToggler.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport rgba from './bensLibrary';\nconst ThemeToggler_ = styled.button(props => ({\n  opacity: .3,\n  padding: props.used ? '.5rem .5rem' : '.5rem 2rem',\n  borderRadius: '100px',\n  outline: 0,\n  border: 0,\n  fontWeight: props.theme.weight.regular,\n  background: props.theme.complement,\n  transition: 'all .5s ease',\n  display: 'block',\n  margin: 'auto',\n  '&:hover': {\n    boxShadow: function () {\n      if (props.theme.mode === 'dark') {\n        if (props.used) {\n          return '0 0 30px 8px rgba(255, 255, 255, 1)';\n        } else {\n          return '0 0 30px 8px rgba(255, 255, 255, .1)';\n        }\n      } else {\n        return false;\n      }\n    },\n    opacity: 1,\n    padding: !props.used && '.5rem 2.5rem',\n    transform: props.used && 'scale(1.2)'\n  } // (() => {\n  //   \n  //     props.used ? `0 0 30px 8px rgba(255, 255, 255, 1)` : `0 0 30px 8px rgba(255, 255, 255, .1)`\n  //   } else { \n  //     return false\n  //   }\n  // }),\n  // boxShadow: (props.theme.mode === 'dark' && props.used === true) && `0 0 20px 3px red`,\n\n}));\nlet used = false;\nexport default function ThemeToggler(props) {\n  if (!used) {\n    used = true;\n    return /*#__PURE__*/React.createElement(ThemeToggler_, {\n      onClick: props.toggleMode,\n      used: false,\n      className: props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(ThemeToggler_, {\n      onClick: props.toggleMode,\n      used: true,\n      className: props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 12\n      }\n    });\n  } // return (\n  //\n  //\n  // TODO: figure out how to apply an animation on click. Having trouble referring to the \n  // button in order to add styles to it\n  //\n  //\n  // )\n\n}","map":{"version":3,"sources":["/Users/ben/Desktop/react-personalsite/src/themeToggler.jsx"],"names":["React","styled","rgba","ThemeToggler_","button","props","opacity","padding","used","borderRadius","outline","border","fontWeight","theme","weight","regular","background","complement","transition","display","margin","boxShadow","mode","transform","ThemeToggler","toggleMode","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,MAAMC,aAAa,GAAGF,MAAM,CAACG,MAAP,CAAcC,KAAK,KAAK;AAC5CC,EAAAA,OAAO,EAAE,EADmC;AAE5CC,EAAAA,OAAO,EAAEF,KAAK,CAACG,IAAN,GAAa,aAAb,GAA6B,YAFM;AAG5CC,EAAAA,YAAY,EAAE,OAH8B;AAI5CC,EAAAA,OAAO,EAAE,CAJmC;AAK5CC,EAAAA,MAAM,EAAE,CALoC;AAM5CC,EAAAA,UAAU,EAAEP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,OANa;AAO5CC,EAAAA,UAAU,EAAEX,KAAK,CAACQ,KAAN,CAAYI,UAPoB;AAQ5CC,EAAAA,UAAU,EAAE,cARgC;AAS5CC,EAAAA,OAAO,EAAE,OATmC;AAU5CC,EAAAA,MAAM,EAAE,MAVoC;AAY5C,aAAW;AACTC,IAAAA,SAAS,EAAE,YAAY;AACrB,UAAIhB,KAAK,CAACQ,KAAN,CAAYS,IAAZ,KAAqB,MAAzB,EAAiC;AAC/B,YAAIjB,KAAK,CAACG,IAAV,EAAgB;AACd,iBAAO,qCAAP;AACD,SAFD,MAEO;AACL,iBAAO,sCAAP;AACD;AACF,OAND,MAMO;AACL,eAAO,KAAP;AACD;AACF,KAXQ;AAYTF,IAAAA,OAAO,EAAE,CAZA;AAaTC,IAAAA,OAAO,EAAE,CAACF,KAAK,CAACG,IAAP,IAAe,cAbf;AAcTe,IAAAA,SAAS,EAAElB,KAAK,CAACG,IAAN,IAAc;AAdhB,GAZiC,CA4B1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnC0C,CAAL,CAAnB,CAAtB;AAuCA,IAAIA,IAAI,GAAG,KAAX;AAEA,eAAe,SAASgB,YAAT,CAAuBnB,KAAvB,EAA8B;AAC3C,MAAI,CAACG,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG,IAAP;AACA,wBAAO,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAEH,KAAK,CAACoB,UAA9B;AAA0C,MAAA,IAAI,EAAE,KAAhD;AAAuD,MAAA,SAAS,EAAEpB,KAAK,CAACqB,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAHD,MAGO;AACL,wBAAO,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAErB,KAAK,CAACoB,UAA9B;AAA0C,MAAA,IAAI,EAAE,IAAhD;AAAsD,MAAA,SAAS,EAAEpB,KAAK,CAACqB,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAN0C,CAS3C;AAGE;AACA;AACA;AACA;AACA;AACA;AACF;;AACD","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport rgba from './bensLibrary'\n\nconst ThemeToggler_ = styled.button(props => ({\n  opacity: .3,\n  padding: props.used ? '.5rem .5rem' : '.5rem 2rem',\n  borderRadius: '100px',\n  outline: 0,\n  border: 0,\n  fontWeight: props.theme.weight.regular,\n  background: props.theme.complement,\n  transition: 'all .5s ease',\n  display: 'block',\n  margin: 'auto',\n\n  '&:hover': {\n    boxShadow: function () {\n      if (props.theme.mode === 'dark') {\n        if (props.used) {\n          return '0 0 30px 8px rgba(255, 255, 255, 1)'\n        } else {\n          return '0 0 30px 8px rgba(255, 255, 255, .1)'\n        }\n      } else {\n        return false\n      }\n    },\n    opacity: 1,\n    padding: !props.used && '.5rem 2.5rem',\n    transform: props.used && 'scale(1.2)'\n  },\n    // (() => {\n    //   \n    //     props.used ? `0 0 30px 8px rgba(255, 255, 255, 1)` : `0 0 30px 8px rgba(255, 255, 255, .1)`\n    //   } else { \n    //     return false\n    //   }\n    // }),\n    // boxShadow: (props.theme.mode === 'dark' && props.used === true) && `0 0 20px 3px red`,\n\n}))\n\nlet used = false;\n\nexport default function ThemeToggler (props) {\n  if (!used) {\n    used = true\n    return <ThemeToggler_ onClick={props.toggleMode} used={false} className={props.className} />\n  } else {\n    return <ThemeToggler_ onClick={props.toggleMode} used={true} className={props.className} />\n  }\n  \n\n  // return (\n    \n    \n    //\n    //\n    // TODO: figure out how to apply an animation on click. Having trouble referring to the \n    // button in order to add styles to it\n    //\n    //\n  // )\n}"]},"metadata":{},"sourceType":"module"}