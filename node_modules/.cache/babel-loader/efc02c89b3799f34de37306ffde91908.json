{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Repos/react-personal-site/src/components/Sketches.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Text from './Text';\nconst Sketches_ = styled.div`\n  width: 100%;\n  display: grid;\n  grid-gap: 1vw;\n  grid-template-columns: repeat(4, 1fr);\n`;\nconst Sketch = styled.div`\n  height: 200px;\n  background: ${props => props.theme.complement};\n  border-radius: .25rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n\n  &:hover {\n    div {\n      transform: scale(1.2);\n    }\n  }\n`;\nconst Icon = styled.div`\n  width: 100px;\n  height: 100px;\n  background-image: url('${props => require('../img/sketches/' + props.name + (props.theme.mode === 'dark' ? '-b' : '-w') + '.png')}');\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  transition: all .5s ease;\n  /* animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    from { transform: rotate(0deg) }\n    to { transform: rotate(360deg) }\n  } */\n`;\nconst SketchInfo = styled.div`\n  display: flex;\n  align-items: flex-end;\n  margin-left: 0;\n  opacity: 0;\n  height: 0;\n  transition: all .5s ease;\n  margin-bottom: 1rem;\n  > * { margin: 0 }\n\n  #separator {\n    /* margin-left: 15px; */\n    width: 3px;\n    height: 100%;\n    background: ${props => props.theme.primary};\n  }\n\n  &.visible {\n    opacity: 1;\n    height: 80px;\n  }\n`;\nconst SketchPreview = styled.div`\n  width: 100%;\n  height: 0;\n  opacity: 0;\n  background: ${props => props.theme.complement};\n  border-radius: .25rem;\n  transition: .5s ease;\n  overflow: hidden;\n\n  .options {\n    transition: all .5s ease;\n    height: 0;\n    background: ${props => props.theme.base}55;\n    width: 100%;\n  }\n\n  &.active {\n    opacity: 1;\n    height: ${window.innerWidth * .8 * (9 / 16)}px;\n\n    .options {\n      height: 40px;\n    }\n\n    .liveSketch {\n      height: 100%;\n      /* background: red; */\n    }\n  }\n`; // import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n\nconst sketchData = [{\n  name: 'Particle Mesh',\n  sketch: 'a',\n  icon: 'nodes',\n  description: '...'\n}, {\n  name: 'Lightning',\n  sketch: 'b',\n  icon: 'lightning',\n  description: '...'\n}, {\n  name: 'Raining Katakana',\n  sketch: 'c',\n  icon: 'katakana',\n  description: 'Recreation of the \"raining code\" animation from the Matrix. I also added a Latin alphabet version powered by a random-word API.'\n}, {\n  name: 'Orbit?',\n  sketch: 'd',\n  icon: 'orbit',\n  description: '...'\n}, {\n  name: 'Light Speed',\n  sketch: 'e',\n  icon: 'starfield',\n  description: '...'\n}];\nexport default class Sketches extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      previewOpen: false,\n      currentSketch: null\n    };\n  }\n\n  showSketch(name, description, sketch) {\n    if (!this.state.previewOpen) {\n      document.querySelector('#sketchPreview').classList.add('active');\n      this.setState({\n        previewOpen: true\n      });\n    }\n\n    this.setState({\n      currentSketch: sketch\n    });\n    document.querySelector('#sketchInfo').classList.add('visible');\n    document.querySelector('#sketchName').innerText = name;\n    document.querySelector('#sketchDescription').innerText = description;\n\n    if (sketch === this.state.currentSketch) {\n      document.querySelector('#sketchPreview').classList.remove('active');\n      document.querySelector('#sketchInfo').classList.remove('visible');\n      this.setState({\n        previewOpen: false,\n        currentSketch: null\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Sketches_, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, sketchData.map((sketch, i) => {\n      return /*#__PURE__*/React.createElement(Sketch, {\n        key: i,\n        onClick: () => this.showSketch(sketch.name, sketch.description, sketch.sketch),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: sketch.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(SketchInfo, {\n      id: \"sketchInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      type: \"h2\",\n      id: \"sketchName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, \"$Sketch_name\"), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"separator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      type: \"p\",\n      id: \"sketchDescription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, \"$Sketch_description\")), /*#__PURE__*/React.createElement(SketchPreview, {\n      id: \"sketchPreview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"liveSketch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/ben/Repos/react-personal-site/src/components/Sketches.jsx"],"names":["React","styled","Text","Sketches_","div","Sketch","props","theme","complement","Icon","require","name","mode","SketchInfo","primary","SketchPreview","base","window","innerWidth","sketchData","sketch","icon","description","Sketches","Component","constructor","state","previewOpen","currentSketch","showSketch","document","querySelector","classList","add","setState","innerText","remove","render","map","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;;;;;CAA7B;AAMA,MAAMC,MAAM,GAAGJ,MAAM,CAACG,GAAI;;gBAEVE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,UAAW;;;;;;;;;;;;CAFhD;AAeA,MAAMC,IAAI,GAAGR,MAAM,CAACG,GAAI;;;2BAGGE,KAAK,IAAII,OAAO,CAAC,qBAAqBJ,KAAK,CAACK,IAA3B,IAAmCL,KAAK,CAACC,KAAN,CAAYK,IAAZ,KAAqB,MAArB,GAA8B,IAA9B,GAAqC,IAAxE,IAAgF,MAAjF,CAAyF;;;;;;;;;;;CAHpI;AAeA,MAAMC,UAAU,GAAGZ,MAAM,CAACG,GAAI;;;;;;;;;;;;;;kBAcZE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYO,OAAQ;;;;;;;CAd/C;AAsBA,MAAMC,aAAa,GAAGd,MAAM,CAACG,GAAI;;;;gBAIjBE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,UAAW;;;;;;;;kBAQ9BF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYS,IAAK;;;;;;cAM9BC,MAAM,CAACC,UAAP,GAAoB,EAApB,IAA0B,IAAE,EAA5B,CAAgC;;;;;;;;;;;CAlB9C,C,CA8BA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,CACjB;AAAER,EAAAA,IAAI,EAAE,eAAR;AAAyBS,EAAAA,MAAM,EAAE,GAAjC;AAAsCC,EAAAA,IAAI,EAAE,OAA5C;AAAqDC,EAAAA,WAAW,EAAE;AAAlE,CADiB,EAEjB;AAAEX,EAAAA,IAAI,EAAE,WAAR;AAAqBS,EAAAA,MAAM,EAAE,GAA7B;AAAkCC,EAAAA,IAAI,EAAE,WAAxC;AAAqDC,EAAAA,WAAW,EAAE;AAAlE,CAFiB,EAGjB;AAAEX,EAAAA,IAAI,EAAE,kBAAR;AAA4BS,EAAAA,MAAM,EAAE,GAApC;AAAyCC,EAAAA,IAAI,EAAE,UAA/C;AAA2DC,EAAAA,WAAW,EAAE;AAAxE,CAHiB,EAIjB;AAAEX,EAAAA,IAAI,EAAE,QAAR;AAAkBS,EAAAA,MAAM,EAAE,GAA1B;AAA+BC,EAAAA,IAAI,EAAE,OAArC;AAA8CC,EAAAA,WAAW,EAAE;AAA3D,CAJiB,EAKjB;AAAEX,EAAAA,IAAI,EAAE,aAAR;AAAuBS,EAAAA,MAAM,EAAE,GAA/B;AAAoCC,EAAAA,IAAI,EAAE,WAA1C;AAAuDC,EAAAA,WAAW,EAAE;AAApE,CALiB,CAAnB;AAQA,eAAe,MAAMC,QAAN,SAAuBvB,KAAK,CAACwB,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,CAACnB,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKoB,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE,KAAf;AAAsBC,MAAAA,aAAa,EAAE;AAArC,KAAb;AACD;;AAEDC,EAAAA,UAAU,CAAClB,IAAD,EAAOW,WAAP,EAAoBF,MAApB,EAA4B;AACpC,QAAI,CAAC,KAAKM,KAAL,CAAWC,WAAhB,EAA6B;AAC3BG,MAAAA,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,EAAyCC,SAAzC,CAAmDC,GAAnD,CAAuD,QAAvD;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD;;AAED,SAAKO,QAAL,CAAc;AAAEN,MAAAA,aAAa,EAAER;AAAjB,KAAd;AACAU,IAAAA,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,SAAtC,CAAgDC,GAAhD,CAAoD,SAApD;AACAH,IAAAA,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCI,SAAtC,GAAkDxB,IAAlD;AACAmB,IAAAA,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,EAA6CI,SAA7C,GAAyDb,WAAzD;;AAEA,QAAIF,MAAM,KAAK,KAAKM,KAAL,CAAWE,aAA1B,EAAyC;AACvCE,MAAAA,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,EAAyCC,SAAzC,CAAmDI,MAAnD,CAA0D,QAA1D;AACAN,MAAAA,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,SAAtC,CAAgDI,MAAhD,CAAuD,SAAvD;AACA,WAAKF,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAE,KAAf;AAAsBC,QAAAA,aAAa,EAAE;AAArC,OAAd;AACD;AACF;;AAEDS,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGlB,UAAU,CAACmB,GAAX,CAAe,CAAClB,MAAD,EAASmB,CAAT,KAAe;AAC7B,0BACE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,CAAb;AAAgB,QAAA,OAAO,EAAE,MAAM,KAAKV,UAAL,CAAgBT,MAAM,CAACT,IAAvB,EAA6BS,MAAM,CAACE,WAApC,EAAiDF,MAAM,CAACA,MAAxD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,MAAM,CAACC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KANA,CAFH,CADF,eAaE,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAgB,MAAA,EAAE,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAGE;AAAM,MAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAe,MAAA,EAAE,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJF,CAbF,eAoBE,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CApBF,CADF;AA2BD;;AApDmD","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Text from './Text'\n\nconst Sketches_ = styled.div`\n  width: 100%;\n  display: grid;\n  grid-gap: 1vw;\n  grid-template-columns: repeat(4, 1fr);\n`\nconst Sketch = styled.div`\n  height: 200px;\n  background: ${props => props.theme.complement};\n  border-radius: .25rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n\n  &:hover {\n    div {\n      transform: scale(1.2);\n    }\n  }\n`\nconst Icon = styled.div`\n  width: 100px;\n  height: 100px;\n  background-image: url('${props => require('../img/sketches/' + props.name + (props.theme.mode === 'dark' ? '-b' : '-w') + '.png')}');\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  transition: all .5s ease;\n  /* animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    from { transform: rotate(0deg) }\n    to { transform: rotate(360deg) }\n  } */\n`\nconst SketchInfo = styled.div`\n  display: flex;\n  align-items: flex-end;\n  margin-left: 0;\n  opacity: 0;\n  height: 0;\n  transition: all .5s ease;\n  margin-bottom: 1rem;\n  > * { margin: 0 }\n\n  #separator {\n    /* margin-left: 15px; */\n    width: 3px;\n    height: 100%;\n    background: ${props => props.theme.primary};\n  }\n\n  &.visible {\n    opacity: 1;\n    height: 80px;\n  }\n`\nconst SketchPreview = styled.div`\n  width: 100%;\n  height: 0;\n  opacity: 0;\n  background: ${props => props.theme.complement};\n  border-radius: .25rem;\n  transition: .5s ease;\n  overflow: hidden;\n\n  .options {\n    transition: all .5s ease;\n    height: 0;\n    background: ${props => props.theme.base}55;\n    width: 100%;\n  }\n\n  &.active {\n    opacity: 1;\n    height: ${window.innerWidth * .8 * (9/16)}px;\n\n    .options {\n      height: 40px;\n    }\n\n    .liveSketch {\n      height: 100%;\n      /* background: red; */\n    }\n  }\n`\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n\nconst sketchData = [\n  { name: 'Particle Mesh', sketch: 'a', icon: 'nodes', description: '...' },\n  { name: 'Lightning', sketch: 'b', icon: 'lightning', description: '...' },\n  { name: 'Raining Katakana', sketch: 'c', icon: 'katakana', description: 'Recreation of the \"raining code\" animation from the Matrix. I also added a Latin alphabet version powered by a random-word API.' },\n  { name: 'Orbit?', sketch: 'd', icon: 'orbit', description: '...' },\n  { name: 'Light Speed', sketch: 'e', icon: 'starfield', description: '...' }\n]\n\nexport default class Sketches extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { previewOpen: false, currentSketch: null }\n  }\n\n  showSketch(name, description, sketch) {\n    if (!this.state.previewOpen) {\n      document.querySelector('#sketchPreview').classList.add('active')\n      this.setState({ previewOpen: true })\n    }\n    \n    this.setState({ currentSketch: sketch })\n    document.querySelector('#sketchInfo').classList.add('visible')\n    document.querySelector('#sketchName').innerText = name\n    document.querySelector('#sketchDescription').innerText = description\n\n    if (sketch === this.state.currentSketch) {\n      document.querySelector('#sketchPreview').classList.remove('active')\n      document.querySelector('#sketchInfo').classList.remove('visible')\n      this.setState({ previewOpen: false, currentSketch: null })\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Sketches_>\n\n          {sketchData.map((sketch, i) => {\n            return (\n              <Sketch key={i} onClick={() => this.showSketch(sketch.name, sketch.description, sketch.sketch)}>\n                <Icon name={sketch.icon} />\n              </Sketch>\n            )\n          })}\n\n        </Sketches_>\n\n        <SketchInfo id='sketchInfo'>\n          <Text type='h2' id='sketchName'>$Sketch_name</Text>\n          {/* <Text type='h2' id='separator'>|</Text> */}\n          <span id='separator' />\n          <Text type='p' id='sketchDescription'>$Sketch_description</Text>\n        </SketchInfo>\n\n        <SketchPreview id='sketchPreview'>\n          <div className='options' />\n          <div className='liveSketch' />\n        </SketchPreview>\n      </>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}