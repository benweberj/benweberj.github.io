{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/react-personalsite/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { withStyles } from '@material-ui/core/styles';\nimport { theme } from './theme';\nimport FuckyButton from './fuckyButton';\nconst darkMode = theme.dark;\nconst lightMode = theme.light;\nconst GlobalStyle = createGlobalStyle`\n  * { transition: all .5s ease }  \n  body { background: ${props => props.theme.base} }\n`;\n\nclass BenWeber extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      theme: darkMode\n    };\n\n    this.toggleMode = () => {\n      this.state.theme === darkMode ? this.setState({\n        theme: lightMode\n      }) : this.setState({\n        theme: darkMode\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: this.state.theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GlobalStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FuckyButton, {\n      className: classes.themeToggle,\n      onClick: this.toggleMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render(withStyles(localStyles)( /*#__PURE__*/React.createElement(BenWeber, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 27\n  }\n})), document.getElementById('root'));","map":{"version":3,"sources":["/Users/ben/Desktop/react-personalsite/src/index.js"],"names":["React","ReactDOM","styled","createGlobalStyle","ThemeProvider","withStyles","theme","FuckyButton","darkMode","dark","lightMode","light","GlobalStyle","props","base","BenWeber","Component","state","toggleMode","setState","render","console","log","classes","themeToggle","localStyles","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,IAAiBC,iBAAjB,EAAoCC,aAApC,QAAyD,mBAAzD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,IAAvB;AACA,MAAMC,SAAS,GAAGJ,KAAK,CAACK,KAAxB;AAEA,MAAMC,WAAW,GAAGT,iBAAkB;;uBAEfU,KAAK,IAAIA,KAAK,CAACP,KAAN,CAAYQ,IAAK;CAFjD;;AAKA,MAAMC,QAAN,SAAuBf,KAAK,CAACgB,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNX,MAAAA,KAAK,EAAEE;AADD,KAD6B;;AAAA,SAKrCU,UALqC,GAKxB,MAAM;AACjB,WAAKD,KAAL,CAAWX,KAAX,KAAqBE,QAArB,GAAgC,KAAKW,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAEI;AAAT,OAAd,CAAhC,GACE,KAAKS,QAAL,CAAc;AAAEb,QAAAA,KAAK,EAAEE;AAAT,OAAd,CADF;AAED,KARoC;AAAA;;AAUrCY,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACA,wBAEE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE,KAAKA,KAAL,CAAWX,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEiB,OAAO,CAACC,WAAhC;AAA6C,MAAA,OAAO,EAAE,KAAKN,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF;AAOD;;AAnBoC;;AAsBvCjB,QAAQ,CAACmB,MAAT,CACEf,UAAU,CAACoB,WAAD,CAAV,eAAwB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB,CADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport styled, { createGlobalStyle, ThemeProvider } from 'styled-components'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { theme } from './theme'\nimport FuckyButton from './fuckyButton'\n\nconst darkMode = theme.dark\nconst lightMode = theme.light\n\nconst GlobalStyle = createGlobalStyle`\n  * { transition: all .5s ease }  \n  body { background: ${props => props.theme.base} }\n`\n\nclass BenWeber extends React.Component {\n  state = {\n    theme: darkMode\n  }\n\n  toggleMode = () => {\n    this.state.theme === darkMode ? this.setState({ theme: lightMode }) \n    : this.setState({ theme: darkMode })\n  }\n\n  render() {\n    console.log(this.state)\n    return (\n\n      <ThemeProvider theme={this.state.theme}>\n        <GlobalStyle />\n        <FuckyButton className={classes.themeToggle} onClick={this.toggleMode} />\n      </ThemeProvider>\n    )\n  }  \n}\n\nReactDOM.render(\n  withStyles(localStyles)(<BenWeber />),\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}