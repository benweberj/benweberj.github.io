{"ast":null,"code":"// import Particle from './Particle'\nexport default ((p, poop) => {\n  let canvas;\n  let bg;\n  let color;\n  let particles;\n  let birds;\n  let particleCount;\n  let connectionDist;\n  let attraction;\n  let attractionDist;\n  let repulseMultiplier;\n\n  p.preload = _ => {// birds = loadSound('birds.mp3')\n  };\n\n  p.setup = _ => {\n    canvas = p.createCanvas(p.windowWidth * .8, p.windowHeight * .8);\n    bg = '#111';\n    color = '#fff';\n    particles = [];\n    particleCount = 100;\n    connectionDist = 500;\n    attraction = 5;\n    attractionDist = 100;\n    repulseMultiplier = 50; // birds.play()\n\n    for (let i = 0; i < particleCount; i++) {\n      particles.push(new Particle(p));\n    }\n  };\n\n  p.draw = _ => {\n    p.background(bg);\n    let mouse = p.createVector(p.mouseX, p.mouseY);\n    particles.forEach(particle => {\n      particle.update(color); // let mouseDist = particle.pos.dist(mouse)\n      // if (mouseDist < attractionDist) {\n      //   let dir = mouse.copy().sub(particle.pos)\n      //   if (p.mouseIsPressed) {\n      //     dir.mult(-repulseMultiplier)\n      //   }\n      //   particle.applyForce(dir.mult(attraction))\n      // }\n\n      particles.forEach(other => {\n        if (particle !== other) {\n          let dist = particle.pos.dist(other.pos);\n          let mouseDist = particle.pos.dist(mouse);\n\n          if (mouseDist < attractionDist) {\n            let dir = mouse.copy().sub(particle.pos);\n\n            if (p.mouseIsPressed) {\n              dir.mult(1 / -repulseMultiplier);\n            }\n\n            particle.applyForce(dir.mult(1 / attraction));\n          }\n\n          if (dist < connectionDist) {\n            let strength = Math.pow(15 / dist, 2);\n            strength = p.constrain(strength, 0, 2);\n            p.stroke(color);\n            p.strokeWeight(strength);\n            p.line(particle.pos.x, particle.pos.y, other.pos.x, other.pos.y);\n          }\n        }\n      });\n    });\n  };\n\n  p.windowResized = _ => p.resizeCanvas(p.windowWidth * .8, p.windowHeight * .8);\n\n  p.myCustomRedrawAccordingToNewPropsHandler = newProps => {\n    bg = newProps.theme.complement;\n    color = newProps.theme.base;\n  };\n});\n\nclass Particle {\n  constructor(p) {\n    this.p = p;\n    this.respawn();\n    this.pos = p.createVector(p.random(-100, p.width + 100), p.random(-100, p.height + 100));\n  }\n\n  update(color) {\n    this.pos.add(this.vel);\n    this.checkPos();\n    this.p.strokeWeight(this.size);\n    this.p.stroke(color);\n    this.p.point(this.pos.x, this.pos.y);\n  }\n\n  applyForce(force) {\n    let dist = force.mag();\n    let strength = .3 / Math.pow(dist, 2);\n    strength = this.p.constrain(strength, 0, .0005);\n    force.setMag(strength);\n    this.vel.add(force);\n  }\n\n  checkPos() {\n    let x = this.pos.x;\n    let y = this.pos.y;\n    let s = 100;\n\n    if (x < 0 - s || x > this.p.width + s || y < 0 - s || y > this.p.height + s) {\n      this.respawn();\n    }\n  }\n\n  respawn() {\n    let rate = this.p.random(.2, .4);\n    this.pos = this.p.createVector(this.p.random(-100, this.p.width + 100), -100);\n    this.vel = this.p.createVector(this.p.random(-rate, rate), this.p.random(0, rate));\n    this.size = this.p.random(1, 10);\n  }\n\n}","map":{"version":3,"sources":["/Users/ben/Repos/react-personal-site/src/sketches/particleMesh.js"],"names":["p","poop","canvas","bg","color","particles","birds","particleCount","connectionDist","attraction","attractionDist","repulseMultiplier","preload","_","setup","createCanvas","windowWidth","windowHeight","i","push","Particle","draw","background","mouse","createVector","mouseX","mouseY","forEach","particle","update","other","dist","pos","mouseDist","dir","copy","sub","mouseIsPressed","mult","applyForce","strength","Math","pow","constrain","stroke","strokeWeight","line","x","y","windowResized","resizeCanvas","myCustomRedrawAccordingToNewPropsHandler","newProps","theme","complement","base","constructor","respawn","random","width","height","add","vel","checkPos","size","point","force","mag","setMag","s","rate"],"mappings":"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","sourcesContent":["// import Particle from './Particle'\n\nexport default (p, poop) => {\n  let canvas\n  let bg\n  let color\n\n  let particles\n  let birds\n  let particleCount\n  let connectionDist\n  let attraction\n  let attractionDist\n  let repulseMultiplier\n\n  p.preload = _ => {\n    // birds = loadSound('birds.mp3')\n  }\n\n  p.setup = _ => {\n    canvas = p.createCanvas(p.windowWidth * .8, p.windowHeight * .8)\n    bg = '#111'\n    color= '#fff'\n    particles = []\n    particleCount = 100\n    connectionDist = 500\n    attraction = 5\n    attractionDist = 100\n    repulseMultiplier = 50\n    // birds.play()\n\n    for (let i = 0; i < particleCount; i++) {\n      particles.push(new Particle(p));\n    }\n  }\n\n  p.draw = _ => {\n    p.background(bg)\n\n    let mouse = p.createVector(p.mouseX, p.mouseY)\n    particles.forEach(particle => {\n      particle.update(color)\n      // let mouseDist = particle.pos.dist(mouse)\n      // if (mouseDist < attractionDist) {\n      //   let dir = mouse.copy().sub(particle.pos)\n      //   if (p.mouseIsPressed) {\n      //     dir.mult(-repulseMultiplier)\n      //   }\n      //   particle.applyForce(dir.mult(attraction))\n      // }\n\n      particles.forEach(other => {\n        if (particle !== other) {\n          let dist = particle.pos.dist(other.pos);\n\n          let mouseDist = particle.pos.dist(mouse)\n          if (mouseDist < attractionDist) {\n            let dir = mouse.copy().sub(particle.pos)\n            if (p.mouseIsPressed) {\n              dir.mult(1/-repulseMultiplier)\n            }\n            particle.applyForce(dir.mult(1 / attraction))\n          }\n\n          if (dist < connectionDist) {\n            let strength = Math.pow(15 / dist, 2);\n            strength = p.constrain(strength, 0, 2);\n            p.stroke(color)\n            p.strokeWeight(strength)\n            p.line(particle.pos.x, particle.pos.y, other.pos.x, other.pos.y);\n          }\n        }\n      })\n    })\n  }\n\n  p.windowResized = _ => p.resizeCanvas(p.windowWidth * .8, p.windowHeight * .8)\n\n  p.myCustomRedrawAccordingToNewPropsHandler = newProps => {\n    bg = newProps.theme.complement\n    color = newProps.theme.base\n  }\n}\n\nclass Particle {\n  constructor(p) {\n    this.p = p\n    this.respawn()\n    this.pos = p.createVector(p.random(-100, p.width+100), p.random(-100, p.height+100))\n  }\n\n  update(color) {\n    this.pos.add(this.vel)\n    this.checkPos()\n\n    this.p.strokeWeight(this.size)\n    this.p.stroke(color)\n    this.p.point(this.pos.x, this.pos.y)\n  }\n\n  applyForce(force) {\n    let dist = force.mag()\n    let strength = .3 / Math.pow(dist, 2)\n    strength = this.p.constrain(strength, 0, .0005)\n    force.setMag(strength)\n    this.vel.add(force)\n  }\n\n  checkPos() {\n    let x = this.pos.x\n    let y = this.pos.y\n    let s = 100\n\n    if ((x < 0 - s) ||\n        (x > this.p.width + s) ||\n        (y < 0 - s) ||\n        (y > this.p.height + s))\n    {\n        this.respawn();\n    }\n  }\n\n  respawn() {\n    let rate = this.p.random(.2, .4)\n    this.pos = this.p.createVector(this.p.random(-100, this.p.width + 100), -100)\n    this.vel = this.p.createVector(this.p.random(-rate, rate), this.p.random(0, rate))\n    this.size = this.p.random(1, 10)\n  }\n}"]},"metadata":{},"sourceType":"module"}