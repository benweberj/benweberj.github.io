{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/react-personalsite/src/text.jsx\";\nimport React from 'react';\nimport styled from 'styled-components'; // import rgba from './bensLibrary'\n\nconst H1 = styled.div(props => ({\n  color: props.color ? props.color : props.theme.primary,\n  fontSize: props.size ? `${props.size}rem` : props.theme.fontSize.h1,\n  fontWeight: props.weight ? props.weight : props.theme.weight.bold\n}));\nconst H2 = styled.h2(props => ({\n  color: props.color ? props.color : props.theme.accent,\n  fontSize: props.size ? `${props.size}rem` : props.theme.fontSize.h2,\n  fontWeight: props.weight ? props.weight : props.theme.weight.regular\n}));\nconst P = styled.p(props => ({\n  color: props.color ? props.color : props.theme.complement,\n  fontSize: props.size ? props.size : props.theme.fontSize.p,\n  fontWeight: props.weight ? props.weight : props.theme.weight.thin\n}));\nexport default function Text(props) {\n  // there has to be a better way to do this\n  if (props.type === 'h1') {\n    return /*#__PURE__*/React.createElement(H1, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    }), props.children);\n  } else if (props.type === 'h2') {\n    return /*#__PURE__*/React.createElement(H2, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    }), props.children);\n  } else {\n    return /*#__PURE__*/React.createElement(P, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    }), props.children);\n  }\n}","map":{"version":3,"sources":["/Users/ben/Desktop/react-personalsite/src/text.jsx"],"names":["React","styled","H1","div","props","color","theme","primary","fontSize","size","h1","fontWeight","weight","bold","H2","h2","accent","regular","P","p","complement","thin","Text","type","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AAEA,MAAMC,EAAE,GAAGD,MAAM,CAACE,GAAP,CAAWC,KAAK,KAAK;AAC9BC,EAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAApB,GAA4BD,KAAK,CAACE,KAAN,CAAYC,OADjB;AAE9BC,EAAAA,QAAQ,EAAEJ,KAAK,CAACK,IAAN,GAAc,GAAEL,KAAK,CAACK,IAAK,KAA3B,GAAkCL,KAAK,CAACE,KAAN,CAAYE,QAAZ,CAAqBE,EAFnC;AAG9BC,EAAAA,UAAU,EAAEP,KAAK,CAACQ,MAAN,GAAeR,KAAK,CAACQ,MAArB,GAA8BR,KAAK,CAACE,KAAN,CAAYM,MAAZ,CAAmBC;AAH/B,CAAL,CAAhB,CAAX;AAMA,MAAMC,EAAE,GAAGb,MAAM,CAACc,EAAP,CAAUX,KAAK,KAAK;AAC7BC,EAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAApB,GAA4BD,KAAK,CAACE,KAAN,CAAYU,MADlB;AAE7BR,EAAAA,QAAQ,EAAEJ,KAAK,CAACK,IAAN,GAAc,GAAEL,KAAK,CAACK,IAAK,KAA3B,GAAkCL,KAAK,CAACE,KAAN,CAAYE,QAAZ,CAAqBO,EAFpC;AAG7BJ,EAAAA,UAAU,EAAEP,KAAK,CAACQ,MAAN,GAAeR,KAAK,CAACQ,MAArB,GAA8BR,KAAK,CAACE,KAAN,CAAYM,MAAZ,CAAmBK;AAHhC,CAAL,CAAf,CAAX;AAMA,MAAMC,CAAC,GAAGjB,MAAM,CAACkB,CAAP,CAASf,KAAK,KAAK;AAC3BC,EAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAApB,GAA4BD,KAAK,CAACE,KAAN,CAAYc,UADpB;AAE3BZ,EAAAA,QAAQ,EAAEJ,KAAK,CAACK,IAAN,GAAaL,KAAK,CAACK,IAAnB,GAA0BL,KAAK,CAACE,KAAN,CAAYE,QAAZ,CAAqBW,CAF9B;AAG3BR,EAAAA,UAAU,EAAEP,KAAK,CAACQ,MAAN,GAAeR,KAAK,CAACQ,MAArB,GAA8BR,KAAK,CAACE,KAAN,CAAYM,MAAZ,CAAmBS;AAHlC,CAAL,CAAd,CAAV;AAMA,eAAe,SAASC,IAAT,CAAelB,KAAf,EAAsB;AACnC;AACA,MAAIA,KAAK,CAACmB,IAAN,KAAe,IAAnB,EAAyB;AACvB,wBAAO,oBAAC,EAAD,oBAAQnB,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAgBA,KAAK,CAACoB,QAAtB,CAAP;AACD,GAFD,MAGK,IAAIpB,KAAK,CAACmB,IAAN,KAAe,IAAnB,EAAyB;AAC5B,wBAAO,oBAAC,EAAD,oBAAQnB,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAgBA,KAAK,CAACoB,QAAtB,CAAP;AACD,GAFI,MAGA;AACH,wBAAO,oBAAC,CAAD,oBAAOpB,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAeA,KAAK,CAACoB,QAArB,CAAP;AACD;AACF","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n// import rgba from './bensLibrary'\n\nconst H1 = styled.div(props => ({\n  color: props.color ? props.color : props.theme.primary,\n  fontSize: props.size ? `${props.size}rem` : props.theme.fontSize.h1,\n  fontWeight: props.weight ? props.weight : props.theme.weight.bold\n}))\n\nconst H2 = styled.h2(props => ({\n  color: props.color ? props.color : props.theme.accent,\n  fontSize: props.size ? `${props.size}rem` : props.theme.fontSize.h2,\n  fontWeight: props.weight ? props.weight : props.theme.weight.regular\n}))\n\nconst P = styled.p(props => ({\n  color: props.color ? props.color : props.theme.complement,\n  fontSize: props.size ? props.size : props.theme.fontSize.p,\n  fontWeight: props.weight ? props.weight : props.theme.weight.thin\n}))\n\nexport default function Text (props) {\n  // there has to be a better way to do this\n  if (props.type === 'h1') {\n    return <H1 {...props}>{props.children}</H1>\n  }\n  else if (props.type === 'h2') {\n    return <H2 {...props}>{props.children}</H2>\n  }\n  else {\n    return <P {...props}>{props.children}</P>\n  }\n}"]},"metadata":{},"sourceType":"module"}