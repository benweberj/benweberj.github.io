{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Repos/react-personal-site/src/components/ThemeToggler.jsx\";\nimport React from 'react';\nimport styled from 'styled-components'; // needed to use the 'props =>' format is so I had access to the used variable\n\nconst Toggler = styled.button(props => ({\n  opacity: .3,\n  padding: props.used ? '.5rem .5rem' : '.5rem 2rem',\n  borderRadius: '100px',\n  outline: 0,\n  border: 0,\n  fontWeight: props.theme.regular,\n  background: props.theme.complement,\n  transition: 'all .5s ease',\n  display: 'block',\n  margin: 'auto',\n  '&:hover': {\n    // boxShadow: function () {\n    //   if (props.theme.mode === 'dark') {\n    //     if (props.used) {\n    //       return '0 0 30px 8px rgba(255, 255, 255, 1)'\n    //     } else {\n    //       return '0 0 30px 8px rgba(255, 255, 255, .1)'\n    //     }\n    //   } else {\n    //     return false\n    //   }\n    // },\n    opacity: 1,\n    padding: !props.used && '.5rem 2.5rem',\n    transform: props.used && 'scale(1.2)'\n  } // (() => {\n  //   \n  //     props.used ? `0 0 30px 8px rgba(255, 255, 255, 1)` : `0 0 30px 8px rgba(255, 255, 255, .1)`\n  //   } else { \n  //     return false\n  //   }\n  // }),\n  // boxShadow: (props.theme.mode === 'dark' && props.used === true) && `0 0 20px 3px red`,\n\n}));\nexport default ThemeToggler = props => {\n  const [used, setUsed] = useState(false);\n\n  const handleClick = _ => {\n    props.toggleMode();\n    setUsed(true);\n  };\n\n  return /*#__PURE__*/React.createElement(Toggler, Object.assign({\n    onClick: handleClick,\n    used: used\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }));\n}; // return (\n//\n//\n// TODO: figure out how to apply an animation on click. Having trouble referring to the \n// button in order to add styles to it\n//\n//\n// )\n// }","map":{"version":3,"sources":["/Users/ben/Repos/react-personal-site/src/components/ThemeToggler.jsx"],"names":["React","styled","Toggler","button","props","opacity","padding","used","borderRadius","outline","border","fontWeight","theme","regular","background","complement","transition","display","margin","transform","ThemeToggler","setUsed","useState","handleClick","_","toggleMode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,MAAMC,OAAO,GAAGD,MAAM,CAACE,MAAP,CAAcC,KAAK,KAAK;AACtCC,EAAAA,OAAO,EAAE,EAD6B;AAEtCC,EAAAA,OAAO,EAAEF,KAAK,CAACG,IAAN,GAAa,aAAb,GAA6B,YAFA;AAGtCC,EAAAA,YAAY,EAAE,OAHwB;AAItCC,EAAAA,OAAO,EAAE,CAJ6B;AAKtCC,EAAAA,MAAM,EAAE,CAL8B;AAMtCC,EAAAA,UAAU,EAAEP,KAAK,CAACQ,KAAN,CAAYC,OANc;AAOtCC,EAAAA,UAAU,EAAEV,KAAK,CAACQ,KAAN,CAAYG,UAPc;AAQtCC,EAAAA,UAAU,EAAE,cAR0B;AAStCC,EAAAA,OAAO,EAAE,OAT6B;AAUtCC,EAAAA,MAAM,EAAE,MAV8B;AAYtC,aAAW;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAb,IAAAA,OAAO,EAAE,CAZA;AAaTC,IAAAA,OAAO,EAAE,CAACF,KAAK,CAACG,IAAP,IAAe,cAbf;AAcTY,IAAAA,SAAS,EAAEf,KAAK,CAACG,IAAN,IAAc;AAdhB,GAZ2B,CA4BpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnCoC,CAAL,CAAnB,CAAhB;AAuCA,eAAea,YAAY,GAAGhB,KAAK,IAAI;AACrC,QAAM,CAACG,IAAD,EAAOc,OAAP,IAAkBC,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMC,WAAW,GAAGC,CAAC,IAAI;AACvBpB,IAAAA,KAAK,CAACqB,UAAN;AACAJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHD;;AAKA,sBAAO,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEE,WAAlB;AAA+B,IAAA,IAAI,EAAEhB;AAArC,KAA+CH,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CATD,C,CAYE;AAGE;AACA;AACA;AACA;AACA;AACA;AACF;AACF","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\n// needed to use the 'props =>' format is so I had access to the used variable\nconst Toggler = styled.button(props => ({\n  opacity: .3,\n  padding: props.used ? '.5rem .5rem' : '.5rem 2rem',\n  borderRadius: '100px',\n  outline: 0,\n  border: 0,\n  fontWeight: props.theme.regular,\n  background: props.theme.complement,\n  transition: 'all .5s ease',\n  display: 'block',\n  margin: 'auto',\n\n  '&:hover': {\n    // boxShadow: function () {\n    //   if (props.theme.mode === 'dark') {\n    //     if (props.used) {\n    //       return '0 0 30px 8px rgba(255, 255, 255, 1)'\n    //     } else {\n    //       return '0 0 30px 8px rgba(255, 255, 255, .1)'\n    //     }\n    //   } else {\n    //     return false\n    //   }\n    // },\n    opacity: 1,\n    padding: !props.used && '.5rem 2.5rem',\n    transform: props.used && 'scale(1.2)'\n  },\n    // (() => {\n    //   \n    //     props.used ? `0 0 30px 8px rgba(255, 255, 255, 1)` : `0 0 30px 8px rgba(255, 255, 255, .1)`\n    //   } else { \n    //     return false\n    //   }\n    // }),\n    // boxShadow: (props.theme.mode === 'dark' && props.used === true) && `0 0 20px 3px red`,\n\n}))\n\nexport default ThemeToggler = props => {\n  const [used, setUsed] = useState(false)\n\n  const handleClick = _ => {\n    props.toggleMode()\n    setUsed(true)\n  }\n\n  return <Toggler onClick={handleClick} used={used} {...props} />\n}\n  \n\n  // return (\n    \n    \n    //\n    //\n    // TODO: figure out how to apply an animation on click. Having trouble referring to the \n    // button in order to add styles to it\n    //\n    //\n  // )\n// }"]},"metadata":{},"sourceType":"module"}