{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/react-personalsite/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { theme, globalStyles } from './styles';\nimport BenWeber from './benWeber'; // this and theme should be put into styles.js or something. Really want to keep styles and content separate\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mode: 'dark'\n    };\n\n    this.toggleMode = () => {\n      this.state.mode === 'dark' ? this.setState({\n        mode: 'light'\n      }) : this.setState({\n        mode: 'dark'\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme[this.state.mode],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GlobalStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BenWeber, {\n      toggleMode: this.toggleMode,\n      theme: theme[this.state.mode],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/ben/Desktop/react-personalsite/src/index.js"],"names":["React","ReactDOM","ThemeProvider","theme","globalStyles","BenWeber","App","Component","state","mode","toggleMode","setState","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,UAApC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;AAGA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,IAAI,EAAE;AADA,KADwB;;AAAA,SAKhCC,UALgC,GAKnB,MAAM;AACjB,WAAKF,KAAL,CAAWC,IAAX,KAAoB,MAApB,GAA6B,KAAKE,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAd,CAA7B,GACI,KAAKE,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAd,CADJ;AAED,KAR+B;AAAA;;AAUhCG,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAET,KAAK,CAAC,KAAKK,KAAL,CAAWC,IAAZ,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAE,KAAKC,UAA3B;AAAuC,MAAA,KAAK,EAAEP,KAAK,CAAC,KAAKK,KAAL,CAAWC,IAAZ,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAlB+B;;AAqBlCR,QAAQ,CAACW,MAAT,eACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { ThemeProvider } from 'styled-components'\n\nimport { theme, globalStyles } from './styles'\nimport BenWeber from './benWeber'\n\n// this and theme should be put into styles.js or something. Really want to keep styles and content separate\n\n\nclass App extends React.Component {\n  state = {\n    mode: 'dark'\n  }\n\n  toggleMode = () => {\n    this.state.mode === 'dark' ? this.setState({ mode: 'light' })\n      : this.setState({ mode: 'dark' })\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme[this.state.mode]}>\n        <GlobalStyle />\n        {/* at the monent, this is the only way I know of to give non-style elemtnts access to the theme */}\n        <BenWeber toggleMode={this.toggleMode} theme={theme[this.state.mode]}/>\n      </ThemeProvider>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}