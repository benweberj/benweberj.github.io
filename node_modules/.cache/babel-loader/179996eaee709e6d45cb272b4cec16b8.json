{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Repos/react-personal-site/src/components/Sketches.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport P5Wrapper from 'react-p5-wrapper';\nimport Text from './Text';\nimport Div from './Div';\nimport particleMesh from '../sketches/particleMesh';\nimport AnimateHeight from 'react-animate-height'; // import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n\nconst Root = styled.div`\n  .sketch {\n    img { transition: all .25s ease }\n    &:hover {\n      img {\n        transform: scale(1.2);\n      }\n    }\n  }\n`;\nconst sketchData = [{\n  name: 'Particle Mesh',\n  sketch: particleMesh,\n  icon: 'nodes',\n  description: 'One of my first complex sketches. Nodes attract to the cursor.'\n}, {\n  name: 'Lightning',\n  sketch: null,\n  icon: 'lightning',\n  description: '...'\n}, {\n  name: 'Raining Katakana',\n  sketch: null,\n  icon: 'katakana',\n  description: 'Recreation of the raining code animation from the Matrix'\n}, {\n  name: 'Orbit?',\n  sketch: null,\n  icon: 'orbit',\n  description: '...'\n}, {\n  name: 'Light Speed',\n  sketch: null,\n  icon: 'starfield',\n  description: 'Animation resembling the light-speed effect from Star Wars.'\n}];\nexport default (props => {\n  const {\n    theme\n  } = props;\n  const [sketch, setSketch] = useState(null);\n\n  const handleClick = clicked => {\n    if (sketch && sketch.name === clicked.name) {\n      setSketch(null);\n    } else {\n      setSketch(clicked);\n    }\n  };\n\n  const suffix = props.theme.mode === 'dark' ? 'b' : 'w';\n  return /*#__PURE__*/React.createElement(Root, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    flex: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, sketchData.map((s, i) => {\n    const selected = (sketch && sketch.name) === s.name;\n    return /*#__PURE__*/React.createElement(Div, {\n      disabled: !s.sketch,\n      w: '100%',\n      h: 80,\n      minW: 80,\n      mr: 5,\n      className: \"sketch\",\n      rounded: true,\n      center: true,\n      key: i,\n      bg: theme[selected ? 'primary' : 'complement'],\n      onClick: _ => handleClick(s),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      height: 40,\n      style: {\n        transform: selected && 'scale(1.2)'\n      },\n      src: require(`../img/sketches/${s.icon}-${selected ? 'w' : suffix}.png`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(AnimateHeight, {\n    height: sketch ? 'auto' : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    bold: true,\n    accent: true,\n    type: \"h3\",\n    mt: 30,\n    mb: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, sketch && sketch.name, \" \", /*#__PURE__*/React.createElement(Text, {\n    inline: true,\n    light: true,\n    ml: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 77\n    }\n  }, sketch && sketch.description)), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    w: '100%',\n    p: 10,\n    bg: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Div, {\n    center: true,\n    w: '100%',\n    contain: true,\n    rounded: true,\n    bg: theme.complement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(P5Wrapper, {\n    sketch: sketch && sketch.sketch,\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })))));\n}); // export default class Sketches extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = { previewOpen: false, currentSketch: null }\n//   }\n//   showSketch(name, description, sketch) {\n//     const sketchPreview = document.querySelector('#sketchPreview')\n//     const sketchInfo = document.querySelector('#sketchInfo')\n//     if (!this.state.previewOpen) {\n//       sketchPreview.classList.add('active')\n//       sketchPreview.style.height = `${sketchPreview.offsetWidth * (9/16)}px`\n//       this.setState({ previewOpen: true })\n//     }\n//     // Show the current sketch in the preview\n//     this.setState({ currentSketch: sketch })\n//     sketchInfo.classList.add('visible')\n//     document.querySelector('#sketchName').innerText = name\n//     document.querySelector('#sketchDescription').innerText = description\n//     if (sketch === this.state.currentSketch) {\n//       sketchPreview.classList.remove('active')\n//       sketchInfo.classList.remove('visible')\n//       sketchPreview.style.height = 0;\n//       this.setState({ previewOpen: false, currentSketch: null })\n//     }\n//   }\n//   render() {\n//     return (\n//       <>\n//         <Sketches_>\n//           {sketchData.map((sketch, i) => {\n//             return (\n//               <Sketch key={i} onClick={() => this.showSketch(sketch.name, sketch.description, sketch.sketch)}>\n//                 <Icon name={sketch.icon} />\n//               </Sketch>\n//             )\n//           })}\n//         </Sketches_>\n//         <SketchInfo id='sketchInfo'>\n//           <Text type='h2' id='sketchName'>$Sketch_name</Text>\n//           <Text type='h2' id='separator'>|</Text>\n//           <Text type='p' id='sketchDescription'>$Sketch_description</Text>\n//         </SketchInfo>\n//         <SketchPreview id='sketchPreview'>\n//           <div className='options' />\n//           <div className='liveSketch'>\n//             <P5Wrapper sketch={this.state.currentSketch} theme={props => props.theme} />\n//           </div>\n//         </SketchPreview>\n//       </>\n//     )\n//   }\n// }","map":{"version":3,"sources":["/Users/ben/Repos/react-personal-site/src/components/Sketches.jsx"],"names":["React","useState","styled","P5Wrapper","Text","Div","particleMesh","AnimateHeight","Root","div","sketchData","name","sketch","icon","description","props","theme","setSketch","handleClick","clicked","suffix","mode","map","s","i","selected","_","transform","require","complement"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport P5Wrapper from 'react-p5-wrapper'\n\nimport Text from './Text'\nimport Div from './Div'\nimport particleMesh from '../sketches/particleMesh'\n\nimport AnimateHeight from 'react-animate-height'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n// import particleMesh from './particleMesh'\n\nconst Root = styled.div`\n  .sketch {\n    img { transition: all .25s ease }\n    &:hover {\n      img {\n        transform: scale(1.2);\n      }\n    }\n  }\n`\n\nconst sketchData = [\n  { name: 'Particle Mesh', sketch: particleMesh, icon: 'nodes', description: 'One of my first complex sketches. Nodes attract to the cursor.' },\n  { name: 'Lightning', sketch: null, icon: 'lightning', description: '...' },\n  { name: 'Raining Katakana', sketch: null, icon: 'katakana', description: 'Recreation of the raining code animation from the Matrix' },\n  { name: 'Orbit?', sketch: null, icon: 'orbit', description: '...' },\n  { name: 'Light Speed', sketch: null, icon: 'starfield', description: 'Animation resembling the light-speed effect from Star Wars.' }\n]\n\nexport default props => {\n  const { theme } = props\n  const [sketch, setSketch] = useState(null)\n\n  const handleClick = clicked => {\n    if (sketch && sketch.name === clicked.name) {\n      setSketch(null)\n    } else {\n      setSketch(clicked)\n    }\n  }\n\n  const suffix = props.theme.mode === 'dark' ? 'b' : 'w'\n  return (\n    <Root>\n      <Div flex>\n        {sketchData.map((s, i) => {\n          const selected = (sketch && sketch.name) === s.name\n          \n          return (\n            <Div disabled={!s.sketch} w={'100%'} h={80} minW={80} mr={5} className='sketch' rounded center key={i} bg={theme[selected ? 'primary' : 'complement']} onClick={_ => handleClick(s)}>\n              <img height={40} style={{ transform: selected && 'scale(1.2)' }} src={require(`../img/sketches/${s.icon}-${selected ? 'w' : suffix}.png`)} />\n            </Div>\n          )\n        })}\n      </Div>\n      \n      <AnimateHeight height={sketch ? 'auto' : 0}>\n        <Text bold accent type='h3' mt={30} mb={10}>{sketch && sketch.name} <Text inline light ml={5}>{sketch && sketch.description}</Text></Text>\n        <Div>\n          <Div w={'100%'} p={10} bg='red'></Div> \n          <Div center w={'100%'} contain rounded bg={theme.complement}>\n            <P5Wrapper sketch={sketch && sketch.sketch} theme={theme} />\n          </Div>\n        </Div>\n      </AnimateHeight>\n    </Root>\n  )\n}\n\n\n// export default class Sketches extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = { previewOpen: false, currentSketch: null }\n//   }\n\n//   showSketch(name, description, sketch) {\n//     const sketchPreview = document.querySelector('#sketchPreview')\n//     const sketchInfo = document.querySelector('#sketchInfo')\n\n//     if (!this.state.previewOpen) {\n//       sketchPreview.classList.add('active')\n//       sketchPreview.style.height = `${sketchPreview.offsetWidth * (9/16)}px`\n//       this.setState({ previewOpen: true })\n//     }\n    \n//     // Show the current sketch in the preview\n//     this.setState({ currentSketch: sketch })\n//     sketchInfo.classList.add('visible')\n//     document.querySelector('#sketchName').innerText = name\n//     document.querySelector('#sketchDescription').innerText = description\n\n//     if (sketch === this.state.currentSketch) {\n//       sketchPreview.classList.remove('active')\n//       sketchInfo.classList.remove('visible')\n//       sketchPreview.style.height = 0;\n//       this.setState({ previewOpen: false, currentSketch: null })\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <>\n//         <Sketches_>\n\n//           {sketchData.map((sketch, i) => {\n//             return (\n//               <Sketch key={i} onClick={() => this.showSketch(sketch.name, sketch.description, sketch.sketch)}>\n//                 <Icon name={sketch.icon} />\n//               </Sketch>\n//             )\n//           })}\n\n//         </Sketches_>\n\n//         <SketchInfo id='sketchInfo'>\n//           <Text type='h2' id='sketchName'>$Sketch_name</Text>\n//           <Text type='h2' id='separator'>|</Text>\n//           <Text type='p' id='sketchDescription'>$Sketch_description</Text>\n//         </SketchInfo>\n\n//         <SketchPreview id='sketchPreview'>\n//           <div className='options' />\n//           <div className='liveSketch'>\n//             <P5Wrapper sketch={this.state.currentSketch} theme={props => props.theme} />\n//           </div>\n//         </SketchPreview>\n//       </>\n//     )\n//   }\n// }"]},"metadata":{},"sourceType":"module"}