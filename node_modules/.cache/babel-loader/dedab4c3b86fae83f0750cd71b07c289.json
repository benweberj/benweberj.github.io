{"ast":null,"code":"export default function sketch(p) {\n  let canvas;\n  let nodes = [];\n\n  p.setup = () => {\n    canvas = p.createCanvas(p.windowWidth, p.windowHeight);\n    p.background('#0d1e35');\n  };\n\n  p.draw = () => {\n    // p.background('orangered');\n    p.ellipse(150, 100, 100, 100);\n  };\n\n  p.myCustomRedrawAccordingToNewPropsHandler = newProps => {\n    if (canvas) //Make sure the canvas has been created\n      p.fill(newProps.color);\n  };\n}\n\nclass Node {\n  constructor(origin) {\n    this.respawn();\n  }\n\n  respawn() {\n    this.pos = p.createVector();\n  }\n\n  checkBounds() {}\n\n}","map":{"version":3,"sources":["/Users/ben/Desktop/react-personalsite/src/particleMesh.js"],"names":["sketch","p","canvas","nodes","setup","createCanvas","windowWidth","windowHeight","background","draw","ellipse","myCustomRedrawAccordingToNewPropsHandler","newProps","fill","color","Node","constructor","origin","respawn","pos","createVector","checkBounds"],"mappings":"AAAA,eAAe,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AAChC,MAAIC,MAAJ;AACA,MAAIC,KAAK,GAAG,EAAZ;;AAEAF,EAAAA,CAAC,CAACG,KAAF,GAAU,MAAM;AACdF,IAAAA,MAAM,GAAGD,CAAC,CAACI,YAAF,CAAeJ,CAAC,CAACK,WAAjB,EAA8BL,CAAC,CAACM,YAAhC,CAAT;AACAN,IAAAA,CAAC,CAACO,UAAF,CAAa,SAAb;AACD,GAHD;;AAKAP,EAAAA,CAAC,CAACQ,IAAF,GAAS,MAAM;AACb;AACAR,IAAAA,CAAC,CAACS,OAAF,CAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB;AACD,GAHD;;AAKAT,EAAAA,CAAC,CAACU,wCAAF,GAA8CC,QAAD,IAAc;AACzD,QAAIV,MAAJ,EAAY;AACVD,MAAAA,CAAC,CAACY,IAAF,CAAOD,QAAQ,CAACE,KAAhB;AACH,GAHD;AAID;;AAED,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKC,OAAL;AACD;;AAEDA,EAAAA,OAAO,GAAG;AACR,SAAKC,GAAL,GAAWlB,CAAC,CAACmB,YAAF,EAAX;AACD;;AAEDC,EAAAA,WAAW,GAAG,CAEb;;AAXQ","sourcesContent":["export default function sketch(p) {\n  let canvas\n  let nodes = []\n\n  p.setup = () => {\n    canvas = p.createCanvas(p.windowWidth, p.windowHeight)\n    p.background('#0d1e35')\n  }\n\n  p.draw = () => {\n    // p.background('orangered');\n    p.ellipse(150, 100, 100, 100);\n  }\n\n  p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n    if (canvas) //Make sure the canvas has been created\n      p.fill(newProps.color);\n  }\n}\n\nclass Node {\n  constructor(origin) {\n    this.respawn()\n  }\n\n  respawn() {\n    this.pos = p.createVector()\n  }\n\n  checkBounds() {\n\n  }\n}"]},"metadata":{},"sourceType":"module"}