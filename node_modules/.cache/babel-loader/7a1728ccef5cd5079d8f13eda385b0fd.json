{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/react-personalsite/src/components/Programming.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nconst Gallery = styled.div`\n  display: grid;\n  grid-template-areas: 'mesh matrix star';\n  grid-gap: 5px;\n\n  ${breakpoint('xl')`\n    grid-template-areas: 'mesh' 'matrix' 'star';\n  `}\n`;\nconst Project = styled.div`\n  background-image: url('../img/${props => props.preview}');\n  background-size: cover;\n  grid-area: ${props => props.id};\n  height: 400px;\n\n`;\nconst projectData = [{\n  id: 'mesh',\n  name: 'Particle Mesh',\n  description: '',\n  repo: '',\n  demo: '',\n  img: 'mesh.gif'\n}, {\n  id: 'matrix',\n  name: 'Raining Code',\n  description: '',\n  repo: '',\n  demo: '',\n  img: 'matrix.gif'\n}, {\n  id: 'star',\n  name: 'Starfield',\n  description: '',\n  repo: '',\n  demo: '',\n  img: 'starfield.gif'\n} // { id: 'light', name: 'Lightning', description: '', repo: '', demo: '', img: 'mesh.gif' },\n];\nconst projects = projectData.map((proj, i) => {\n  return /*#__PURE__*/React.createElement(Project, {\n    gridArea: proj.id,\n    preview: proj.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  });\n});\nexport default function Programming(props) {\n  return /*#__PURE__*/React.createElement(Gallery, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, projects);\n}\n/* //   ${breakpoint('sm')`\n//     grid-template-columns: repeat(2, 1fr);\n//   `} */","map":{"version":3,"sources":["/Users/ben/Desktop/react-personalsite/src/components/Programming.jsx"],"names":["React","styled","breakpoint","Gallery","div","Project","props","preview","id","projectData","name","description","repo","demo","img","projects","map","proj","i","Programming"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAI;;;;;IAKvBF,UAAU,CAAC,IAAD,CAAO;;GAEjB;CAPJ;AAUA,MAAMG,OAAO,GAAGJ,MAAM,CAACG,GAAI;kCACOE,KAAK,IAAIA,KAAK,CAACC,OAAQ;;eAE1CD,KAAK,IAAIA,KAAK,CAACE,EAAG;;;CAHjC;AAQA,MAAMC,WAAW,GAAG,CAClB;AAAED,EAAAA,EAAE,EAAE,MAAN;AAAcE,EAAAA,IAAI,EAAE,eAApB;AAAqCC,EAAAA,WAAW,EAAE,EAAlD;AAAsDC,EAAAA,IAAI,EAAE,EAA5D;AAAgEC,EAAAA,IAAI,EAAE,EAAtE;AAA0EC,EAAAA,GAAG,EAAE;AAA/E,CADkB,EAElB;AAAEN,EAAAA,EAAE,EAAE,QAAN;AAAgBE,EAAAA,IAAI,EAAE,cAAtB;AAAsCC,EAAAA,WAAW,EAAE,EAAnD;AAAuDC,EAAAA,IAAI,EAAE,EAA7D;AAAiEC,EAAAA,IAAI,EAAE,EAAvE;AAA2EC,EAAAA,GAAG,EAAE;AAAhF,CAFkB,EAGlB;AAAEN,EAAAA,EAAE,EAAE,MAAN;AAAcE,EAAAA,IAAI,EAAE,WAApB;AAAiCC,EAAAA,WAAW,EAAE,EAA9C;AAAkDC,EAAAA,IAAI,EAAE,EAAxD;AAA4DC,EAAAA,IAAI,EAAE,EAAlE;AAAsEC,EAAAA,GAAG,EAAE;AAA3E,CAHkB,CAIlB;AAJkB,CAApB;AAQA,MAAMC,QAAQ,GAAGN,WAAW,CAACO,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5C,sBACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAED,IAAI,CAACT,EAAxB;AAA4B,IAAA,OAAO,EAAES,IAAI,CAACH,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CANgB,CAAjB;AAQA,eAAe,SAASK,WAAT,CAAsBb,KAAtB,EAA6B;AAC1C,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,QADH,CADF;AAKD;AAED","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport breakpoint from 'styled-components-breakpoint'\n\nconst Gallery = styled.div`\n  display: grid;\n  grid-template-areas: 'mesh matrix star';\n  grid-gap: 5px;\n\n  ${breakpoint('xl')`\n    grid-template-areas: 'mesh' 'matrix' 'star';\n  `}\n`\n\nconst Project = styled.div`\n  background-image: url('../img/${props => props.preview}');\n  background-size: cover;\n  grid-area: ${props => props.id};\n  height: 400px;\n\n`\n\nconst projectData = [\n  { id: 'mesh', name: 'Particle Mesh', description: '', repo: '', demo: '', img: 'mesh.gif' },\n  { id: 'matrix', name: 'Raining Code', description: '', repo: '', demo: '', img: 'matrix.gif' },\n  { id: 'star', name: 'Starfield', description: '', repo: '', demo: '', img: 'starfield.gif' },\n  // { id: 'light', name: 'Lightning', description: '', repo: '', demo: '', img: 'mesh.gif' },\n]\n\n\nconst projects = projectData.map((proj, i) => {\n  return (\n    <Project gridArea={proj.id} preview={proj.img}>\n\n    </Project>\n  )\n})\n\nexport default function Programming (props) {\n  return (\n    <Gallery>\n      {projects}\n    </Gallery>\n  )\n}\n\n/* //   ${breakpoint('sm')`\n//     grid-template-columns: repeat(2, 1fr);\n//   `} */"]},"metadata":{},"sourceType":"module"}