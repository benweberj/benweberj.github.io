{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/react-personalsite/src/text.jsx\";\nimport React from 'react';\nimport styled from 'styled-components'; // import rgba from './bensLibrary'\n\nconst createText = props => {\n  return styled[props.type](() => ({\n    color: props.color ? props.color : props.theme.accent,\n    fontSize: props.size ? `${props.size}rem` : props.theme.fontSize.h2,\n    fontWeight: props.weight ? props.weight : props.theme.weight.regular\n  }));\n};\n\nconst H1 = createText('h1');\nconst P = createText('p'); // const H1 = styled.button(props => ({\n//   color: props.color ? props.color : props.theme.primary,\n//   fontSize: props.size ? `${props.size}rem` : props.theme.fontSize.h1,\n//   fontWeight: props.weight ? props.weight : props.theme.weight.bold\n// }))\n\nconst H2 = styled.h2(props => ({\n  color: props.color ? props.color : props.theme.accent,\n  fontSize: props.size ? `${props.size}rem` : props.theme.fontSize.h2,\n  fontWeight: props.weight ? props.weight : props.theme.weight.regular\n})); // const P = styled.p(props => ({\n//   color: props.color ? props.color : props.theme.complement,\n//   fontSize: props.size ? props.size : props.theme.fontSize.p,\n//   fontWeight: props.weight ? props.weight : props.theme.weight.thin\n// }))\n\nexport default function Text(props) {\n  // there has to be a better way to do this\n  if (props.type === 'h1') {\n    return /*#__PURE__*/React.createElement(H1, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }), props.children);\n  } else if (props.type === 'h2') {\n    return /*#__PURE__*/React.createElement(H2, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    }), props.children);\n  } else {\n    return /*#__PURE__*/React.createElement(P, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    }), props.children);\n  }\n}","map":{"version":3,"sources":["/Users/ben/Desktop/react-personalsite/src/text.jsx"],"names":["React","styled","createText","props","type","color","theme","accent","fontSize","size","h2","fontWeight","weight","regular","H1","P","H2","Text","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,SAAOF,MAAM,CAACE,KAAK,CAACC,IAAP,CAAN,CAAmB,OAAO;AAC/BC,IAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAApB,GAA4BF,KAAK,CAACG,KAAN,CAAYC,MADhB;AAE/BC,IAAAA,QAAQ,EAAEL,KAAK,CAACM,IAAN,GAAc,GAAEN,KAAK,CAACM,IAAK,KAA3B,GAAkCN,KAAK,CAACG,KAAN,CAAYE,QAAZ,CAAqBE,EAFlC;AAG/BC,IAAAA,UAAU,EAAER,KAAK,CAACS,MAAN,GAAeT,KAAK,CAACS,MAArB,GAA8BT,KAAK,CAACG,KAAN,CAAYM,MAAZ,CAAmBC;AAH9B,GAAP,CAAnB,CAAP;AAKD,CAND;;AAQA,MAAMC,EAAE,GAAGZ,UAAU,CAAC,IAAD,CAArB;AACA,MAAMa,CAAC,GAAGb,UAAU,CAAC,GAAD,CAApB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMc,EAAE,GAAGf,MAAM,CAACS,EAAP,CAAUP,KAAK,KAAK;AAC7BE,EAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAApB,GAA4BF,KAAK,CAACG,KAAN,CAAYC,MADlB;AAE7BC,EAAAA,QAAQ,EAAEL,KAAK,CAACM,IAAN,GAAc,GAAEN,KAAK,CAACM,IAAK,KAA3B,GAAkCN,KAAK,CAACG,KAAN,CAAYE,QAAZ,CAAqBE,EAFpC;AAG7BC,EAAAA,UAAU,EAAER,KAAK,CAACS,MAAN,GAAeT,KAAK,CAACS,MAArB,GAA8BT,KAAK,CAACG,KAAN,CAAYM,MAAZ,CAAmBC;AAHhC,CAAL,CAAf,CAAX,C,CAMA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASI,IAAT,CAAed,KAAf,EAAsB;AACnC;AACA,MAAIA,KAAK,CAACC,IAAN,KAAe,IAAnB,EAAyB;AACvB,wBAAO,oBAAC,EAAD,oBAAQD,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAgBA,KAAK,CAACe,QAAtB,CAAP;AACD,GAFD,MAGK,IAAIf,KAAK,CAACC,IAAN,KAAe,IAAnB,EAAyB;AAC5B,wBAAO,oBAAC,EAAD,oBAAQD,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAgBA,KAAK,CAACe,QAAtB,CAAP;AACD,GAFI,MAGA;AACH,wBAAO,oBAAC,CAAD,oBAAOf,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAeA,KAAK,CAACe,QAArB,CAAP;AACD;AACF","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n// import rgba from './bensLibrary'\n\nconst createText = props => {\n  return styled[props.type](() => ({\n    color: props.color ? props.color : props.theme.accent,\n    fontSize: props.size ? `${props.size}rem` : props.theme.fontSize.h2,\n    fontWeight: props.weight ? props.weight : props.theme.weight.regular\n  }))\n}\n\nconst H1 = createText('h1')\nconst P = createText('p')\n\n// const H1 = styled.button(props => ({\n//   color: props.color ? props.color : props.theme.primary,\n//   fontSize: props.size ? `${props.size}rem` : props.theme.fontSize.h1,\n//   fontWeight: props.weight ? props.weight : props.theme.weight.bold\n// }))\n\nconst H2 = styled.h2(props => ({\n  color: props.color ? props.color : props.theme.accent,\n  fontSize: props.size ? `${props.size}rem` : props.theme.fontSize.h2,\n  fontWeight: props.weight ? props.weight : props.theme.weight.regular\n}))\n\n// const P = styled.p(props => ({\n//   color: props.color ? props.color : props.theme.complement,\n//   fontSize: props.size ? props.size : props.theme.fontSize.p,\n//   fontWeight: props.weight ? props.weight : props.theme.weight.thin\n// }))\n\nexport default function Text (props) {\n  // there has to be a better way to do this\n  if (props.type === 'h1') {\n    return <H1 {...props}>{props.children}</H1>\n  }\n  else if (props.type === 'h2') {\n    return <H2 {...props}>{props.children}</H2>\n  }\n  else {\n    return <P {...props}>{props.children}</P>\n  }\n}"]},"metadata":{},"sourceType":"module"}