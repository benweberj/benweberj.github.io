{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/react-personalsite/src/components/Text.jsx\";\nimport React from 'react';\nimport styled from 'styled-components'; // import rgba from './bensLibrary'\n// I feel like theres a way to do this with a single function using bracket notation to call 'styled.h1' with 'styled['h1']'\n\nconst H1 = styled.h1(props => ({\n  marginTop: '3rem',\n  marginBottom: '1rem',\n  fontSize: '2rem',\n  color: props.color ? props.color : props.theme.complement,\n  fontWeight: props.weight ? props.weight : props.theme.weight.bold\n}));\nconst H2 = styled.h2(props => ({\n  marginTop: '3rem',\n  marginBottom: '.8rem',\n  fontSize: '1.8rem',\n  color: props.color ? props.color : props.theme.primary,\n  fontWeight: props.weight ? props.weight : props.theme.weight.regular\n}));\nconst H3 = styled.h2(props => ({\n  marginTop: '3rem',\n  marginBottom: '.5rem',\n  fontSize: '1.5rem',\n  color: props.color ? props.color : props.theme.accent,\n  fontWeight: props.weight ? props.weight : props.theme.weight.regular\n}));\nconst P = styled.p(props => ({\n  color: props.color ? props.color : props.theme.complement,\n  fontSize: '1.2rem',\n  fontWeight: props.weight ? props.weight : props.theme.weight.thin\n}));\nexport default function Text(props) {\n  // there has to be a better way to do this\n  if (props.type === 'h1') {\n    return /*#__PURE__*/React.createElement(H1, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    }), props.children);\n  } else if (props.type === 'h2') {\n    return /*#__PURE__*/React.createElement(H2, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    }), props.children);\n  } else if (props.type === 'h3') {\n    return /*#__PURE__*/React.createElement(H3, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    }), props.children);\n  } else if (props.type === 'p') {\n    return /*#__PURE__*/React.createElement(P, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    }), props.children);\n  } else {\n    return /*#__PURE__*/React.createElement(P, Object.assign({}, props, {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    }), \"Unknown text type\");\n  }\n}","map":{"version":3,"sources":["/Users/ben/Desktop/react-personalsite/src/components/Text.jsx"],"names":["React","styled","H1","h1","props","marginTop","marginBottom","fontSize","color","theme","complement","fontWeight","weight","bold","H2","h2","primary","regular","H3","accent","P","p","thin","Text","type","children"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n// import rgba from './bensLibrary'\n\n// I feel like theres a way to do this with a single function using bracket notation to call 'styled.h1' with 'styled['h1']'\n\nconst H1 = styled.h1(props => ({\n  marginTop: '3rem',\n  marginBottom: '1rem',\n  fontSize: '2rem',\n  color: props.color ? props.color : props.theme.complement,\n  fontWeight: props.weight ? props.weight : props.theme.weight.bold\n}))\n\nconst H2 = styled.h2(props => ({\n  marginTop: '3rem',\n  marginBottom: '.8rem',\n  fontSize: '1.8rem',\n  color: props.color ? props.color : props.theme.primary,\n  fontWeight: props.weight ? props.weight : props.theme.weight.regular\n}))\n\nconst H3 = styled.h2(props => ({\n  marginTop: '3rem',\n  marginBottom: '.5rem',\n  fontSize: '1.5rem',\n  color: props.color ? props.color : props.theme.accent,\n  fontWeight: props.weight ? props.weight : props.theme.weight.regular\n}))\n\nconst P = styled.p(props => ({\n  color: props.color ? props.color : props.theme.complement,\n  fontSize: '1.2rem',\n  fontWeight: props.weight ? props.weight : props.theme.weight.thin\n}))\n\nexport default function Text (props) {\n  // there has to be a better way to do this\n  if (props.type === 'h1') {\n    return <H1 {...props}>{props.children}</H1>\n  }\n  else if (props.type === 'h2') {\n    return <H2 {...props}>{props.children}</H2>\n  } else if (props.type === 'h3') {\n    return <H3 {...props}>{props.children}</H3>\n  } else if (props.type === 'p'){\n    return <P {...props}>{props.children}</P>\n  } else {\n    return <P {...props} style={{ color: 'red' }}>Unknown text type</P>\n  }\n}"]},"metadata":{},"sourceType":"module"}